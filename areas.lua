
local ret = { ModName = "ZADV_Base", area={} }

ret.area['example'] = {

	-- Area blueprint string. "" to ignore whole area
	-- Areas larger than 64x64 will be ignored
	bp=""
	
	
	-- blueprint options
	,probability = 100						-- [default: 100] from 1 to 1000 (*0.1%)
	,remoteness_min = 10					-- [default: 10] minimal distance in chunks (32x32) from starting point
	,remoteness_max = 0						-- [default: 0] maximal distance in chunks (32x32) from starting point, 0 for unlimited
	,only_once = false						-- [default: false] if true, only one copy of this area allowed
	,ignore_technologies = true				-- [default: true] If false, only if all necessary technologies is learned - area can be placed
	,force = "neutral"						-- [default: "neutral"] "player", "neutral", "enemy" or custom name to use/create new Force and use it for the building
	,random_direction = false				-- [default: false] When true, area will be randomly rotated to one of four direction (north, east, south, west) each time when placed on surface
	,force_build = true						-- [default: true] When true, anything that can be built is else nothing is built if any one thing can't be built. When false, all additional options for entities belw will be ignored
	,finalize_build = true					-- [default: true] Build entities; place ghosts if "false"
	,force_reveal = false					-- [default: false] If "true" area will be revealed after build
	,ignore_water = false					-- [default: false] If "true" ignore water and place entities above them (entities may be unreachable)
	,ignore_all_collision = false			-- [default: false] If "truth" ignores all possible collisions and places entities on top of them (performance lags while placing area)


	-- additional options will be applied
	-- for each entity if allowed to do so
	-- comment/delete line to exclude
	,dangerous = false						-- [default: false] If true, players can get harmed or even been killed
	,active = true							-- [default: true] Deactivating an entity will stop all its operations (inserters will stop working)
	,minable = true							-- [default: true] Not minable entities can still be destroyed
	,destructible = true					-- [default: true] When the entity is not destructible it can't be damaged
	,remains = false						-- [default: false] Replace entities with their remains if they have it
	,health = -1							-- [default: -1 (ignored)] Set health in procentage of the entity. Entities with 0 health can not be attacked. Setting health to higher than max health will set health to max health
	,operable = true						-- [default: true] Player can't open gui of this entity and he can't quick insert/input stuff in to the entity when it is not operable
	,order_deconstruction = false			-- [default: false] Sets the entity to be deconstructed by construction robots
	,rotatable = true						-- [default: true] When entity is not to be rotatable (inserter, transport belt etc), it can't be rotated by player using the R key
	
	
	-- custom data to pass it into functions
	,userdata = {}

	--- Script would be running for each entity in new area
	-- @param rndroll - random number 1-1000
	-- @param game - game script root
	-- @param surface - working surface
	-- @param force - what build the area
	-- @param area - area where blueprint was builded
	-- @param center - center of the area where blueprint was builded
	-- @param entity - builded entity reference
	-- @param namelist - "false" in none; array of entity names in this blueprint
	-- @param locstore - temporal storage fo data, exist for all iteration while area generated
	-- @param userdata - passed custom data
	,ScriptForEach = function(rndroll, game, surface, force, area, center, entity, namelist, locstore, userdata) end
	
	--- Script would be running once after new area created
	-- @param rndroll - random number 1-1000
	-- @param game - game script root
	-- @param surface - working surface
	-- @param force - what build the area
	-- @param area - area where blueprint was builded
	-- @param center - center of the area where blueprint was builded
	-- @param namelist - "false" in none; array of entity names in this blueprint
	-- @param entitylist - "false" in none; array of entities already builded (if remains = false)
	-- @param userdata - passed custom data
	,ScriptForAll = function(rndroll, game, surface, force, area, center, namelist, entitylist, userdata) end
	
	-- An array of messages to be printed in the chat after the creation of the area.
	-- One will be selected randomly. Message ignored if empty.
	,messages = {
		{ msg = "", color = {r=0.30, g=0.70, b=1, a=0.8} } -- { "Message", {Color RGBA} }
	}
	
	
	-- if this area is update for existed area (for example: add new mod support for old areas)
	-- data in pointed area will be replaced or not if fields is incorrect
	-- you must reproduce all old fields to replace 'em with new data (for now)
	,update_for = { mod="", area="" }
	
}

ret.area['armored rail junction'] = {

	bp=""
	
	,probability = 25
	,remoteness_min = 20
	,remoteness_max = 50
	,max_copies = 3
	,destructible = false
	,rotatable = false
}

ret.area['lone yellow belt'] = {
	
	bp="0eNqVlN1ugzAMhd/F10Qi0JaOV5mmKYBXLOUHJem2quLdl0JHqzV0cBkSPtvHxz5DJY/YWdIeyjNQbbSD8vUMjg5ayMs3f+oQSiCPChLQQl1OzkhhWSc0SugTIN3gN5S8f0sAtSdPOGKGw+ldH1WFNjyIAhLojAv/GH2JFzhpAicoWd73yQMiW4bInyDyCUHWaFa36PwjgT1DbCbEh3CekXZofbiYpWRBpYYs1uPdJsLcTkzhHKpKkj4wJeqWNLJsFp0GcuDS0CVvhXadsZ5VKD1EouymKAobOiqGMiRlqWadkRiJwscCeEyG4qbkvAJ8SvNOgCxC2080aULprQiuap5om/5m9i/55WYajyjnWp5eM40QeLqg1GiluxiNr+x1pNWDdw8YRuCrxWEMH8MsHJark6JO5/mamY0jNsttsqCZfLumm1Hf8t2aLRIvqlhsCP7XEGFLDuu0vNu+CXyideODfZFle/6SFlnf/wCjbd0a"
	
	,probability = 100
	,remoteness_max = 20
	,max_copies = 10
	,ignore_technologies = true
	,random_direction = true
	
	,minable = false
	,operable = false
	,rotatable = false
	
	,ScriptForEach = function(rndroll, game, surface, force, area, center, entity, namelist, locstore, userdata)
		if entity.prototype.name == "steel-chest" then
			entity.get_inventory(defines.inventory.chest).insert( {name="iron-plate", count=5000} )
		elseif entity.prototype.name == "iron-chest" then
			entity.operable = true
		end
	end
	
}

ret.area['yellow belts'] = {
	
	bp="0eNqdmu1u6zYMhu/Fv2PAkqyv3MpQHLiJ0BpznMB2z1YUvfe5TbsGG628r34VSepHJEWKlMm36nF4SZepH5dq/1b1h/M4V/s/3qq5fxq74eO75fWSqn3VL+lU7aqxO318ms9DN9WXbkxD9b6r+vGY/q726n1398luntPpcejHp/rUHZ77MdXqBqHfH3ZVGpd+6dNVks8Pr7/Gl9NjmtY1RBl21eU8r8+cx4+FV06t9K56Xf+G9w+h/gPRICRmGAZkuAyjBRkmw7AYo8kgHIbISeExRM4YAUPk9iRiiKxvqOZfyDJ143w5T0v9mIZFcrL2CnKrAx/7KR2uP7YSVhFYI2KdhNUEVuNYQ2AVjm0JbINjLY6NONXh1IBTPU71uHcFnOpwWSNOtTBVEwHW4lQivvDw0po7UayYbQx/orT391y3PNYC2J9g6sc5Tcv65fZZggBdPvlvw80KX9H9RdBRWshDkje45Dcp6dQNQ52G9d+n/lBfzkPKHIWyG0TWDrHIDKahT0NRXqPo88/ejyij6fMPoRpk6x2886Zl98qV7ZUlPczmNowONFMmNBRnBjd2IOVuBLH76TzWT2k9ov96Tp+3kv+vEzlj54K5bUiZTZnMrSLXcYXr/ITlKR37l9M944SccQwpdCwUuiAD6vv+2FoeawCs42oJLZr25qK1dIc/61ym+5JNiaCfoPu09OE5zRkFG5ERmVJB3TeR/Ymq4by6zHM3HtMxq6P5Eu8+++bNwbI61LbGeltjy4bJd0kg0wytbgOr2yJ7E/GtsaD5YkZfR2RpRCbP2s/D5gugui6jbixK7iLL0ZHRoqo6RaRzYFecBk1nMuoi9VyDi9TSgZaRDYyEJoNwJZWIjGJjIHO6uQBYnXCEiBkq4we+ASTCDwyvSGNlItKDbp45ILzh3MBnUKyHhwwLeQOAZw7vMENlEofnqx5EsEDXeWJN5pkySCzGQlP4ioStmIMqewdBr6Px6kO2CHGhlwGFN3haU1t26abXcXiWlg3i4ZQqP192SyffLYRYdK8mV4kNnOhEW0QFpyX5eV10q2e1LLuGs6u0cLaQbWGpa7F4AkdHn+RG5Hia04qcQOkkvkSJkZbFyf1MvqFpZRDfwkSaTA3fwoSwfAsTwvItTAhry1oNGzvl2BYAJKNnGwIQNbANAYga2YYoQmVmAyxOVWxDFKLqorcPskMx8wB45DPjAHjgM9MAeNwT0wB41Cu8JtvYF+TGrnOAop6IzCIa+7jdib4+7iIaTznfCRGA4jFiJKg410E0+fG405ZUH4LiAWJxm3oSKpdAOsD1+oZr4+kEzyY3jXqm5yZLSHTr8SxKNOvxhA/16mNOVTwm8OLGWG6wVJ4dNI6aLN2AeGq0dAMSqNnSDUhkhktlxk2nHJgu3WAoZrx0g6GZ+dINhqHudSvkYXedf97fDFrvqt9pmq+uGLzWQcXGr/fafwC4fA53"
	
	,probability = 75
	,remoteness_max = 25
	,max_copies = 4
	,random_direction = true
	
	,minable = false
	,operable = false
	,rotatable = false
	
	,ScriptForEach = function(rndroll, game, surface, force, area, center, entity, namelist, locstore, userdata)
		if entity.prototype.name == "steel-chest" then
			entity.get_inventory(defines.inventory.chest).insert( {name="iron-plate", count=5000} )
		elseif entity.prototype.name == "iron-chest" then
			entity.operable = true
		end
	end
	
}

ret.area['red belts'] = {
	
	bp="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"
	
	,probability = 50
	,remoteness_min = 15
	,remoteness_max = 35
	,max_copies = 2
	,random_direction = true
	
	,minable = false
	,operable = false
	,rotatable = false
	
	,ScriptForEach = function(rndroll, game, surface, force, area, center, entity, namelist, locstore, userdata)
	
		if entity.prototype.name == "assembling-machine-2" then
			entity.get_inventory(defines.inventory.assembling_machine_modules).insert( {name="effectivity-module-3", count=2} )
			if not entity.get_recipe() then entity.set_recipe("fast-transport-belt") end
			
		elseif entity.prototype.name == "steel-chest" then
			entity.get_inventory(defines.inventory.chest).insert( {name="iron-plate", count=5000} )
			
		elseif entity.prototype.name == "iron-chest" then
			entity.operable = true
			
		end
	end
	
}

ret.area['blue belts'] = {
	
	bp="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"
	
	,probability = 35
	,remoteness_min = 20
	,remoteness_max = 50
	,max_copies = 2
	,random_direction = false
	
	,minable = false
	,operable = false
	,rotatable = false
	
	,ScriptForEach = function(rndroll, game, surface, force, area, center, entity, namelist, locstore, userdata)
		
		if entity.prototype.name == "stone-wall"
		or entity.prototype.name == "pump"
		or entity.prototype.name == "pipe"
		or entity.prototype.name == "pipe-to-ground"
		then
			entity.destructible = false
		
		elseif entity.prototype.name == "oil-refinery" then
			entity.get_inventory(defines.inventory.furnace_modules).insert( {name="effectivity-module-3", count=3} )
			entity.set_recipe("basic-oil-processing")
			entity.destructible = false
			
		elseif entity.prototype.name == "chemical-plant" then
			entity.get_inventory(defines.inventory.furnace_modules).insert( {name="effectivity-module-3", count=3} )
			entity.set_recipe("lubricant")
			entity.destructible = false
		
		elseif entity.prototype.name == "assembling-machine-2" then
			entity.get_inventory(defines.inventory.assembling_machine_modules).insert( {name="effectivity-module-3", count=2} )
			entity.set_recipe("fast-transport-belt")
			
		elseif entity.prototype.name == "assembling-machine-3" then
			entity.get_inventory(defines.inventory.assembling_machine_modules).insert( {name="effectivity-module-3", count=4} )
			entity.set_recipe("express-transport-belt")
			
		elseif entity.prototype.name == "iron-chest" then
			entity.operable = true
			
		elseif entity.prototype.name == "storage-tank"
			and entity.position.x > center.x+5
			and entity.position.y > center.y+5 then
				entity.fluidbox[1] = { name = "crude-oil", amount = 25000 }
		end
	end
	
}

ret.area['garage'] = {
	
	bp="0eNqV2Ntu4jAUBdB/8XMixZc4l1+p0IiC1VpKHJSYmUGIf6+hD1Tqxj7nCXFbOTjbO8BVvE9nd1p9iGK8Cn9YwibGt6vY/EfYT/fH4uXkxCh8dLOoRNjP93tbXIKr/+2nSdwq4cPR/RejvO0q4UL00btv5XHn8iec53e3pheg91fitGzpLUu4Hy0xdVeJS7rRt1v1i1A0wmYITSPaDGFohMkQLY3QGcLSCJUhOhohM0RPIpqMMJCE3AyyIRG5lZC0cObOh6SFM5cKSQtnLpuSFs7cDpG0cOb2qbSsva6g0bEMCY2eVRh4joFlwDlUw2odOIeSrNrBhmKVBjY0q7uwYTi1gYmWVV7YsJziwETHqS9M9JziwMTAqS9I6IZTHDDlWnIIPIXiNCAmNKe+MGE4BF6LltNeDSRYJYqn6DjdhadgVSie4pnO2R39ea7d5A5x9Yf6tEzuZXdAzPzI6ZxGKVkyQ0keZTKUYkQfC5ohwDNlOKnFAufKjz/FM7Mf++he5kSn3w1Hv6blfjylEMW6/sN9bHoOgb/rs67+cIq2Ka1JS12TVpYoQ6ZUiVJkSpcoTaZMgWrIUlsaSpKpUqjpK9UVJPpMfUGiB2EoSOSTZ59B9+sS6sOn2+KrCoNbxZbyTW4PW4o3ec9ZzvcJ/Kk4xZxaaFd9/98y/vh7phJ/3bo9Xmz7TqleDk2XjvYFgTvM9g=="
	
	,probability = 25
	,remoteness_min = 15
	,remoteness_max = 40
	,max_copies = 3
	,force = "player"
	,random_direction = false
	
	,minable = false
	,destructible = true
	
	,ScriptForEach = function(rndroll, game, surface, force, area, center, entity, namelist, locstore, userdata)
		
		local function Rnd(max)
			return ZADVRnd(1,max or 1000,rndroll)
		end
		
		locstore.cars = locstore.cars or 1 + (Rnd() > 600 and 1 or 0)
		
		if entity.prototype.name == "stone-wall"
		or entity.prototype.name == "gate" then
			entity.force = 'enemy'
			entity.health = entity.prototype.max_health * (Rnd()/400)
			if Rnd() < 100 then
				entity.die('neutral')
			else
				entity.force = 'neutral'
			end
			
		elseif entity.prototype.name == "medium-electric-pole" then
			
				local pos = entity.position
				
				if Rnd() > 700 then
				
					local ent = surface.create_entity{name="tank", position=pos, force=force}
					
					if ent.valid then
						
						ent.health = ent.prototype.max_health * (Rnd()/900)
						
						local variations = {
							['000'] = { "firearm-magazine" },
							['100'] = { "cannon-shell", "firearm-magazine"},
							['200'] = { "cannon-shell", "firearm-magazine", "flamethrower-ammo" },
							['400'] = { "cannon-shell", "piercing-rounds-magazine", "flamethrower-ammo" },
							['550'] = { "explosive-cannon-shell", "piercing-rounds-magazine"},
							['750'] = { "uranium-cannon-shell", "piercing-rounds-magazine", "flamethrower-ammo" },
							['850'] = { "cannon-shell", "uranium-rounds-magazine", "flamethrower-ammo" },
							['925'] = { "explosive-cannon-shell", "uranium-rounds-magazine" },
							['950'] = { "explosive-uranium-cannon-shell","uranium-rounds-magazine", "flamethrower-ammo" }
						}
						
						local selct = variations['000']
						local lorr = Rnd()
						for chance,variant in pairs(variations) do
							if lorr >= tonumber(chance) then selct = variant end
						end
						
						for _,ammo in pairs(selct) do
							ent.get_inventory(defines.inventory.car_ammo).insert( ammo )
							ent.get_inventory(defines.inventory.car_trunk).insert( ammo )
							ent.get_inventory(defines.inventory.car_trunk).insert( ammo )
						end
					end
					
				end
				
				if entity.valid then entity.destroy() end
				
		elseif entity.prototype.name == "small-electric-pole" then
		
			local pos = entity.position
			
			if Rnd() > 400 and locstore.cars > 0 then
			
				local ent = surface.create_entity{name="car", position=pos, force=force}
					
				if ent.valid then
						
					ent.health = ent.prototype.max_health * (Rnd()/600)
					
					local variations = {
						['000'] = "",
						['200'] = "firearm-magazine",
						['450'] = "piercing-rounds-magazine",
						['825'] = "uranium-rounds-magazine"
					}
					
					local selct = variations['000']
					local lorr = Rnd()
					for chance,variant in pairs(variations) do
						if lorr >= chance then selct = variant end
					end
					
					if selct:len() > 0 then
						ent.get_inventory(defines.inventory.car_ammo).insert( selct )
						ent.get_inventory(defines.inventory.car_trunk).insert( selct )
						ent.get_inventory(defines.inventory.car_trunk).insert( selct )
					end
					
					locstore.cars = locstore.cars - 1
					
				end
				
			end
			
			if entity.valid then entity.destroy() end
			
		elseif entity.prototype.name == "iron-chest" then
			if Rnd() > 850 then
				entity.get_inventory(defines.inventory.chest).insert( {name="nuclear-fuel", count=4} )
			elseif Rnd() > 600 then
				entity.get_inventory(defines.inventory.chest).insert( {name="rocket-fuel", count=20} )
			elseif Rnd() > 400 then
				entity.get_inventory(defines.inventory.chest).insert( {name="solid-fuel", count=100} )
			elseif Rnd() > 200 then
				entity.get_inventory(defines.inventory.chest).insert( {name="coal", count=200} )
			elseif Rnd() > 100 then
				entity.get_inventory(defines.inventory.chest).insert( {name="raw-wood", count=200} )
			end
			
		end
	end
	
}

ret.area['danger chest'] = {
	
	bp="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"
	
	,probability = 50
	,remoteness_min = 10
	,force = "enemy"
	,random_direction = true
	
	,dangerous = true
		
	,ScriptForEach = function(rndroll, game, surface, force, area, center, entity, namelist, locstore, userdata)
		
		local function Rnd(max)
			return ZADVRnd(1,max or 1000,rndroll)
		end
	
		if entity.prototype.name == "wooden-chest" then
			entity.force = 'neutral'
			
			local variations = {
				{ "coal",						-1, 01 },
				{ "raw-wood",					10, 10 },
				{ "coal",						10, 10 },
				{ "stone",						10, 10 },
				{ "iron-ore",					10, 10 },
				{ "empty-barrel",				-1, 01 },
				{ "copper-cable",				10, 10 },
				{ "copper-ore",					10, 10 },
				{ "crude-oil-barrel",			10, 10 },
				{ "light-armor",				-1, 01 },
				{ "raw-fish",					-1, 01 },
				{ "iron-plate",					10, 10 },
				{ "copper-plate",				10, 10 },
				{ "steel-plate",				 4,  8 },
				{ "heavy-oil-barrel",			 4,  8 },
				{ "heavy-armor",				-1, 01 },
				{ "light-oil-barrel",			 4,  8 },
				{ "firearm-magazine",			 2,  6 },
				{ "piercing-rounds-magazine",	 1,  5 },
				{ "uranium-rounds-magazine",	 1,  3 },
				{ "modular-armor",				-1, 01 },
				{ "power-armor",				-1, 01 },
				{ "iron-gear-wheel",			 4, 10 }
			}
			
			local armorpack = {
				["modular-armor"] = {
					{-1, 1,	"night-vision-equipment" },
					{ 1, 4,	"solar-panel-equipment" }
				},
				["power-armor"] = {
					{-1, 1,	"exoskeleton-equipment" },
					{-1, 1,	"night-vision-equipment" },
					{-1, 1,	"personal-roboport-equipment" },
					{ 1, 8,	"solar-panel-equipment" },
					{-1, 1,	"battery-equipment" },
					{ 1,42,	"construction-robot" }
				},
			}
			
			variations = variations[math.max(1,Rnd() % #variations)]
			
			if variations[2] < 0 then
				entity.get_inventory(defines.inventory.chest).insert({ name=variations[1], count=1 })
				
			elseif variations[2] ~= 0 or (variations[2] == 0 and Rnd() % 10 ~= 0) then 
				for i=1, math.min(16, math.max(variations[2], Rnd() % variations[3])), 1 do
					entity.get_inventory(defines.inventory.chest).insert(variations[1])
				end
			end
			
			if armorpack[ variations[1] ] then for _,ins in pairs(armorpack[ variations[1] ]) do
				
				if ins[1] < 0 then entity.get_inventory(defines.inventory.chest).insert({ name=ins[3], count=0-ins[1] })
				else entity.get_inventory(defines.inventory.chest).insert( {name=ins[3], count= Rnd(ins[2])}) end
				
			end end
			
		elseif entity.prototype.name == "land-mine" and Rnd()  > 400 then
			entity.destroy()
		end
	end
	
	,ScriptForAll = function(rndroll, game, surface, force, area, center, namelist, entitylist, userdata)
		
		if rndroll < 150 then
			for _,ent in pairs(entitylist) do
				if ent and ent.valid and ent.prototype.name == "land-mine" then ent.destroy() end
			end
		end
	end
	
}

for name, bpstring in pairs( -- mazes
--[ [ variations ] ]
{
--	 ['maze variant_0'] = "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"
	 ['maze variant_1'] = ""
	,['maze variant_2'] = ""
	,['maze variant_3'] = ""
	,['maze variant_4'] = ""
	,['maze variant_5'] = ""
	,['maze variant_6'] = ""
	,['maze variant_7'] = "0eNqtneGOHreRRd9lfktAF8kmi36VwAhke2IPII8MaZysY+jd147X9mLFS/Ee768gifpONT929+muqls/P3z19sfHH94/Pb88fPHzw9PX754/PHzxt58fPjx9+/zm7a//28tPPzw+fPHw9PL4/cOrh+c33//63z68vHt+fP2vN2/fPnx89fD0/M3jfz18ER+/fPXw+Pzy9PL0+JvKf/7LT39//vH7rx7f//IPVse/evjh3YdfDnn3/Otf+0XmdblePfz063/Gx4+vPhEphyKxE6lnIpE7kXYoMnci96FI34n0Q5GxExmHIm0nkoci905kHoqUnUhchyp1q3K4Z2O7Z+Nw08Z208bhrt1u2jjctdtNG4e7drtp43DXbjdtHO7a7aaNw1273bRxuGu3m7Ycbtrtni1/7tlv37w8fnr4n3v11cM3T+8fv/7t/ysrrdOduw3obOPuV+Zs3+7jONu2271Sznbt/gc627Tbq6ec7dntli1nW3Z7P6lnO3Z7Edezm+z+HlvPdur2vlbPNur+wVMPd+oeUM626v5hXM/26v4JWM826x5Q6tlu3WNBPduun4G2s/26R6V2tmH3INvONuweH9vhrXW72VozmfpaqtyeSsylSjepeh3L8FRELOlxtVCZJhMvz+i+PJV1LHd4aC1UiofWQqV6aC1UmofWQuW2qFiImEC7/p2HJSIiSYuKhci0qHgt0j2gFSLhQehyYbtHsiKSalHoOhCLZEUcFskKDYtkhYZFskLDIlmhMR0KXWuMywFIoREe+y03yCgWhYpIqhWJEGkWQAqR22O/9Zp0S0REMiz2EyJpsZ8QmRb7rUXy8thvubAZloiIxPwoG7lUqabKWKo079uuULlNgFyrmB9mxboM7xuxiMWF2bXK9L4Sr1WmC7NrlTAxdLm604XZdSwuzK5VXJhdq5gwuxbxYFasrQmz60i8r7MiEhNmxzqlYNJsrlXC+lKsYileLELlbN9ee5HmobVQuS0uFmvbLRERybDIWESSloiIZFpsvI7kMBO23/qHibDcixQL04VItThdrEmzPjmrUG4rFCHSPVIXKsNDdbEs6amIWKYH6+tYDnNhe0aIEh7zi1iK9elZxVK9WIRK894dhMrtcb9Yl+6piFiGCf59LZOmzL2WmeYLxFqmXuYbhJAJE/6FTDHpX8hUE/+FTDP5X8jcJrqv903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"
}) do

	ret.area[name] = {
	
	bp=bpstring
		
		,probability = 35
		,remoteness_min = 30
		,random_direction = true
		,minable = false
		
		,ScriptForEach = function(rndroll, game, surface, force, area, center, entity, namelist, locstore, userdata)
		
			if entity and entity.valid and entity.prototype.name == "iron-chest" then
				
				local function Rnd(max)
					return ZADVRnd(1,max or 1000,rndroll)
				end
				
				local data = {
					surface = surface,
					entity = entity,
					prize = {}
				}
				
				do -- prize variations
					local variations = {
						{ "science-pack-1",				 2,  6 },
						{ "uranium-ore",				 2,  6 },
						{ "solid-fuel",					 2,  6 },
						{ "plastic-bar",				 4,  8 },
						{ "engine-unit",				 4,  6 },
						{ "science-pack-2",				 2,  4 },
						{ "military-science-pack",		 2,  3 },
						{ "sulfur",						 2, 12 },
						{ "battery",					 2,  3 },
						{ "science-pack-3",				 2,  3 },
						{ "lubricant-barrel",			 6, 12 },
						{ "electric-engine-unit",		 2,  4 },
						{ "electronic-circuit",			 2,  9 },
						{ "advanced-circuit",			 2,  6 },
						{ "production-science-pack",	 2,  2 },
						{ "processing-unit",			 2,  3 },
						{ "high-tech-science-pack",		 1,  2 },
						{ "power-armor-mk2",			-1,  1 },
						{ "space-science-pack",			 1,  2 }
					}
					local armorpack = {
						{-2, 1,	"exoskeleton-equipment" },
						{-1, 1,	"night-vision-equipment" },
						{-1, 1,	"personal-roboport-mk2-equipment" },
						{-4, 1,	"fusion-reactor-equipment" },
						{1, 5,	"energy-shield-mk2-equipment" },
						{1, 10,	"battery-mk2-equipment" },
						{1, 100,"construction-robot" }
					}
							
					variations = variations[math.max(1,Rnd() % #variations)]
					
					if variations[2] < 0 then
						table.insert(data.prize, { name=variations[1], count=1 })
						
					elseif variations[2] ~= 0 or (variations[2] == 0 and Rnd() % 10 ~= 0) then 
						for i=1, math.min(16, math.max(variations[2], Rnd() % variations[3])), 1 do
							table.insert(data.prize, variations[1])
						end
					end
					
					if variations[1] == 'power-armor-mk2' then for _,ins in pairs(armorpack) do
						
						if ins[1] < 0 then table.insert(data.prize, { name=ins[3], count=0-ins[1] })
						else table.insert(data.prize, {name=ins[3], count= Rnd(ins[2])}) end
						
					end end
				end
				
				
				global.ZADV.adata = global.ZADV.adata or {}
				global.ZADV.adata['maze'] = global.ZADV.adata['maze'] or {}
				global.ZADV.adata['maze'][center.x] = global.ZADV.adata['maze'][center.x] or {}
				global.ZADV.adata['maze'][center.x][center.y] = global.ZADV.adata['maze'][center.x][center.y] or {}
				
				data.pos = center
				data.area = Position.expand_to_area(data.pos, 22)
				data.chestarea = Position.expand_to_area(data.pos, 2)
				data.debuffarea = Area.expand(data.area,12)
				
				-----------------------------------------------------------------------------------------------
				data.on_tick = function() if game.tick % 10 <= 1 then
				for x,xd in pairs(global.ZADV.adata['maze']) do if type(xd)=='table' then for y,ad in pairs(xd) do
					
				local next = true
				
				if not ad.done then
					
					if ad.looted and not ad.destroyed then
						for _,ent in pairs(surface.find_entities_filtered{
						area=ad.area,name={"iron-chest","gate","stone-wall"}}) do
							if ent and ent.valid then ent.die('neutral') end
						end
						ad.destroyed = true
					end
					
					
					if ad.looted and ad.destroyed then
						ad.done = true
						global.ZADV.adata['maze'][x][y] = { done = true }
						global.ZADV.adata['maze'][x][y] = ad
						return true
					end
					
					
					if not ad.entity or not ad.entity.valid then
						if not ad.surface then ad.surface = game.surfaces[1] end
						if ad.surface and ad.chestarea then
							for _,ent in pairs(surface.find_entities_filtered{
							area=ad.chestarea, name="iron-chest"}) do
								
								if ent.valid then 
									ad.entity = ent
								else next = false end
								global.ZADV.adata['maze'][x][y] = ad
								return true
							end
					end end
					
					
					if ad.lootarea and not ad.looted 
					and ad.stored_items ~= ad.entity.get_inventory(defines.inventory.chest).get_item_count()
					then
						ad.looted = true
						global.ZADV.adata['maze'][x][y] = ad
						return true
					end 
					
					for _,player in pairs(game.players) do if player.surface == ad.surface and next then
							
						if Area.inside(Area.shrink(ad.area, 16), player.position) and not ad.lootarea then
							
							for _,ins in pairs(ad.prize) do
								if ad.entity and ad.entity.valid then
									ad.entity.get_inventory(defines.inventory.chest).insert(ins)
								else
									ad.looted = true
									ad.destroyed = true
									ad.surface.spill_item_stack(ad.pos, {name='coal'}, true)
									player.print("Naughty kids get coal candy!", Color.black)
									next = false
								end
							end
							if next then
								ad.stored_items = ad.entity.get_inventory(defines.inventory.chest).get_item_count()
								ad.lootarea = true
								player.print("Take your prize!", Color.blue)
								global.ZADV.adata['maze'][x][y] = ad
								next = false
							end
							
						elseif Area.inside(Area.shrink(ad.area, 7), player.position) and not ad.inside then
							ad.inside = true; player.print("Hey ".. player.name ..", you are so close to the treasure. Hurry up!", Color.orange)
							
						elseif Area.inside(ad.area, player.position) and not ad.inarea then
							ad.inarea = true; player.print("You enter the Maze. Don't waste your time!", Color.yellow)
							
						elseif Area.inside(ad.debuffarea, player.position) and not ad.visited then
							ad.visited = true; player.print("You found The Maze!", Color.green)
						end
						
					end end
					
					global.ZADV.adata['maze'][x][y] = ad
					
				end end end end end end
				-----------------------------------------------------------------------------------------------
				
				
				global.ZADV.adata['maze'][center.x][center.y] = data
			
				if not global.ZADV.adata['maze'][center.x][center.y].evented then
					global.ZADV.adata['maze'][center.x][center.y].evented = true
					script.on_event(defines.events.on_tick, global.ZADV.adata['maze'][center.x][center.y].on_tick)
				end
				
			end
		end
		
	}
end

ret.area['smart lab'] = {
	
	bp="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"
	
	,probability = 35
	,remoteness_min = 5
	,remoteness_max = 50
	,only_once = true
	,force = "player"
	,random_direction = true
	,force_reveal = true
	
	,destructible = false
	,operable = false
	,rotatable = false
	
	,messages = {
		{ msg = "Let be the light! Or science?.. Or.. Whatever...", color = {r=0.30, g=0.70, b=1, a=0.8} },
		{ msg = "Give me a place to stand and with a lever. I will.. do something.", color = {r=0.30, g=0.70, b=1, a=0.8} },
		{ msg = "Fifteen men on a dead man's chest. Yo ho ho and a bottles of science? o_O", color = {r=0.30, g=0.70, b=1, a=0.8} },
		{ msg = "Nerds attack!", color = {r=0.30, g=0.70, b=1, a=0.8} }
	}
}

ret.area['unbuilded atom'] = {
	
	bp=""
	
	,probability = 300
	,remoteness_min = 50
	,force = "player"
	,only_once = true
	,ignore_technologies = false
	,random_direction = true
	,finalize_build = false
}

for name, bpstring in pairs( -- blueprints
--[ [ variations ] ]
{
	 ['bp rail_straight'] 	= "0eNqVl9tugkAYhF+l+a/BsMuZx+ht0zSgG7sJAgFsagzv3hWtqXUwzh2n/ZgJw+7sUap6b7reNqMUR7HrthmkeDvKYLdNWZ+ujYfOSCF2NDvxpCl3p7O+tLVMnthmY76lUNO7J6YZ7WjNefx8cvho9rvK9O6Bm5H+he5J1w5uTNucXuQ4friKPTm4A5Wu4mny7kD6ChpGh9p+jv6s5R6lL6AMYcJnMQ8p0XOubk15srG9WZ/vR4Aa0xYTJC5hLUJKSouJECZjxUBKTovRCKOCK6eyW9/U7mv0du13bW3uWcFDlGKNYQwf6wBy6FxjTMTKgb+Hikk1mJKwYmCQVUqKwZSMFQODrHJSDKTogBUDw6fZDGMKG2GYPE0GGEPY+GJDZHoxhA0v/tBkdjGEjS78AXTOz50pXIEDzhNUEyrSEy4DmpOCISEpBU+9YcRpWaCwHQIvSyHZIRYobIfAi39IdogFCtshcC2KyPQuUNharDLciiN28l3os+Tsu0Aha/Fs6l8rdtuJecNR/NmfeFKXlXF7Enl12Jdfhe76l+mHeWCSpVpnKg9Sl8Qf77s5ug=="
	,['bp rail_tjunktion'] 	= "0eNqlmNuKo0AQhl9l6Wsd7KOaR5jLZe+GZTGmyTQYE4wZJgTffTVmZhIp8S9yp2J/1qH/qrIvYl2d/KEJdStWFxHKfX0Uq7eLOIZtXVTDs/Z88GIlQut3IhJ1sRvumiJUootEqDf+U6xkF0FL4ts7PytV9zcSvm5DG/z45evN+V992q1906NJQCQO+2O/Zl8P3+s5sdQvNhLn/ip/sT1/Expfji+owboJVj1iy/ci1LNwJlt/s49tT9++t/E1XoTRZsRmy1CDQxUMtd/Q8tR8+M0cMh+J6SNRE0SHm5nAZqYwNIOZGcx0MDOHmXjehzCBUDzvUqJQPElSoUyGnbCUGAGFlYQnXoJConXkKCIsJHzLS1hHDG1KWEiMuiRhJTEqqEq4kjePUElB0f5kv1qIm7YQqoyqHzGtwzb2Vf9yE8r4sK/8rEhdR5E0c7tPnE4ppsGcnveZDKVl900DZN2xGydCTXmdUwMpz9itEzE05/ZOAKqfVRIJldzuOYFaCqq4ULW8UbV+0lLSfcPt8wjUMvs8wnTMPo8wU2afV8tFSmdMplnWqM6fY5KDffJcgSaZkjWP6OV5xCjmPIJYqbnzCAI13HkEgVruPIJAHecf9O4HV027KZmwlFmjk+XCZzJujVLLJdrkTChgqE3QU4PZmFLyt5JX+pLlKmUVZum8oaT/mlmjFeA8878Jcd6CzvO2vuUJy93gyZRNmowOfvrK1NRIbjOQIW+M5XznGFHOG+USDKFRm5zkZGE2CVTJcKBo4q99k/ZUiqOZpScjKYYnNhpiOdG69+shWmY4Tr2eu67uTnYjURVrX/XPfvfsX3/i11M9LojEh2+Oo5KyVKlM5kmquu4/rBc90g=="
	,['bp rail_trijunktion']= "0eNqVmMtuo0AQRX9l1Gs6ot+NPyHL0exG0ch2WklLGFsYRxNF/veBAJ7YKYtbSz843K7HrYIPsalP6dDmphOrD5G3++YoVr8/xDG/NOt6+K57PySxErlLO1GIZr0bPrXrXItzIXLznP6KlToX0CVy+s//K/X5qRCp6XKX03jnzw/vf5rTbpPaHn0BHLse8fLayc+bF+KwP/ZX7ZvhjoMGW4h3sZIq9vTn3Kbt+GMYtN1ANReqy2uoIaDmAt2e2rf0fAdZTTLdNVETREsG77vI8sFN0PBwg1UE1sGn13RIqdP7C3STX2Sq+/+2eSsP+zoR4IveM4EKsL44YfxyyiMbChy6gqF+gtplpapkU/2yVKWw8pRmYpprpqeYcB9p+vhU0Suwjxytkzy7RXVahk6H6VRzQNVyZyoPJmkykQqQCXeTnKupBGo0XlvT9nWdm7sGJf3FoDRiUAruq0hLpqC65EiuLorVrWKqwrQCrdrdj4SjuBrj9m41g6sHYLJowyu0AMTXgv2gZiQFgWeTHPI5cCJwWg9TZ/dHqHhnzUaNUCNOtTi14oxnqaa0eypHpuTuDzRGsVMNuLLRYGHPKwgwPoxhmd3gGBO7b0WKZ7kBtCTGsb3hm+dQU90wumXUB7ivCSzDuZmVliJGlt+oZbM1FSfPytyNKiXXlnhUSyqqlGKruFC9nCoLb3UyUkxSqGEyLaDTMjcbC+h0TKYHdHrW5h2Wty8bOCtyAB40wV4KFJA8M3ODs8su7Fj7mwxTd7rb5qQC6vA+slTaqVJymsmMwJM73kaaYpI6LZOJLNsOfTgaiYaab86z7HjKd4WMOAevbmOXK00KjEwKOcZdhY3x+SWP8vRW4UvOijeWHP3+xSvmucj9zoOPLuHruRbHqDe8Vw4qktos84Q95akYX2iuvrwyLUS93qS6/+5nf/WPX22Wj6dmlF+It9QexxKMQeuoqjL0dfQP0ygDWQ=="
	,['bp rail_yjunktion']	= "0eNqVlsluwjAQhl+lmnOCkjFZH6HH3qqqqkKwwGowKAsqQnn3OgsU6ISMT5GT+PP8s3nOsCoaeSiVriE9g8r3uoL04wyV2uis6N7Vp4OEFFQtd+CAznbdqsxUAa0DSq/lD6R+67C2uOM/fzux/XRA6lrVSg4n94vTl252K1ka9BVQ1Qax2dZuf7gDh31ldu11d6Ihub7nwKl/tp05Dxxkc8JnGMHFPKUsuZTnmgJr38QUJrxi8qY8yvUUJBgYgYneWpUyH74tCWLEI9LAgADGtg4jhSZMocnAEPNCu+M4SJpIKfX5CY8DFBlQJMuQyJPFGBNcPERFUFhhaat3z/QpJrs2SGREIYN79fk2U3rSB9MuIM0N7cx9jBbp1siyV3mMDIgtmcjQzq0nvyeKeSIyy+kCpBC+XYfG+fxBtEN68yFGYZOSbjjm5L+UJM1dMsMiemZAejHgMS6I+ciGvA40qZRKaows+w95K2BsV8I0JGF2WDEKTBak44VnKWliTPHtNE1Q0CZLb5U9XJxmxuuHwfRm3HSgyFbSzIvwZtgv7+5ro7/N26Msq35bGEeIsZ94EbbtL2cIfqY="
	,['bp rail_ujunktion']	= "0eNqdmklu20AQRa8S9Joyeh50hCwDZBUYgSwTDhGZNjQYMQzdPdRoWyiq//dKECE+/uoauqqpN3W32LTPy65fq+mb6uZP/UpNf72pVffQzxa7a+vX51ZNVbduH1Wj+tnj7tty1i3UtlFdf9/+U1OzbaBbJsffvN9pt7eNavt1t+7aw5P3X15/95vHu3Y5oM+A1XpAPPxZT/YPb9Tz02q466nfPXEgTUxs1OvuM293ci44FufYaxwnGiRQ9E04ctJNGAy+75bt/PALL3A9xr3ACqCAGnrdzghjri574t0XJU7m3Sdyypkz3yxf2vtRijlSXN11RmPQMWaQmIZ2o2ivsbQfZY7jHelFkOc9KYP4QJc5fKTLnC+EuhVBX4h1GVTAWpXPNcVclionlVL9mTv/M+v6UfoVuJHgfOCLxls+8GUOXPDTydAiF2br+QDRIiiQRSzVa5iFs2CSz9qqVcwmUGkQhSYJmTGkTLQSsXDlO9XtdhpdzZHFlNLOGTqixfBxFmw1PgV0NYIcv0PIDZZHo/uoDtEGZswIUnQxvW3I1vK7hrg/u8zU5PeKH5CC7woqUp8kVrPOaywKx5VKu4enc0RcTW9pr4g9gXdsVfX1yPOehVpg4QJZsWy9VPtIMn09FH1iHSw7JtMOFrsDX+hezdY9HDRL1XUPB3ySjrhSS0IRoXDSiEgpEoPnkJemS5EY2PkD0RnZ5hcRSqeMGOqB22Heuwc9ck5R2BQUu5moOVnuo6yqQyJx/KQlL0tJEy0LBQp4xLcaDwv1JBPRCaeNiBSdFDkk0GtHPGc0LDOTTEQnOOJfCXvJ8UmTJUNMzWSY1PxcMKotfbLcmIAg2W4N2CAT26z5egolOIUmFtYZ0WOOo5egk6KUSKWI9XAaiUgpM1OhAnVsBSS1WXNqgf08G66tBhYgWw6JqHTUyA0UpezJXhOYpXIgmRFweQQt3wOT+LYDPTc7MeqiMtcBRyBoCocEprsCHgpM4jEHI9LEFQOuptszi/jeCNxuToiqQ4pjas6ovVJQF/oVSwag6KFzORRHA/gFTBSZKB0qlUTOTxmIyUw2wcYCQgu5MSJQozVPFTmGO+/DxFluJ8SgjoaKGM9NEJi2QE2m/tRWuMscjyI9sr6W31rqRK7gCCaDlfs0iJggHwsYTaeG/MLakJ3XGMZghn2y62LUuG0O/4WZfvi3TaMWs7t2MVz7MWC//Zx83/R/h6sv7XJ18HpO1mZTdBpi9j89vqfr"
	,['bp rail_ojunktion']	= "0eNqdmttu2kAQhl+l2mtT7ex6TzxCbyr1tooqIFZiiTgRkKhRlHevCYYUMy7/3ztI8MfsnHYOvJnl+rl52rTdzszfTLt67LZm/vPNbNu7brHe/233+tSYuWl3zYOpTLd42L/bLNq1ea9M2902v81c3ivokdnwmc8n3ftNZZpu1+7a5vDNH29ef3XPD8tm06NVQGWeHrf9M4/d/vt6zsx/DZV57V+4/tX7Xp4RyJ1A212PurvfzT5OcYlyA6jWMB7F/JNSY6c6P1RlbttNszr8v1ao4URdPW9emtupA/oDVMo5MijIiCEniJqQ6URctnezZt1/dtOuZk+P6+aSawdu0pSYYYvGAVOfi5cUaKGh8RzqFahY0Ivd0eASxgZ3GldQaSeE1UwujoWO1Coa1IO+mQamP2dGjVnDtsoD1V13AAk0tQY8ILLpZ0xV7Z9QqiWgmUxxELRg9p8wv6ZSZ1E5J+ykOb8TFuquO7/D7x45Gspe91TneawD9AqH1RRVVWw4T4Gr+0XbTSZCsadE6MaJUJU50jJbwG4JTFoy3H8JYOK3lgzxlQFXKIx2P5R6VMNYvZrQ3tJCj/WrWc3DwTZF1TzNO8xqn0bTIJ4VLQNqxC+s/d22p8brtveBpmbANnhE6VDVNImFRkCrGY3ScmD669eVx8tAiaqkmk5rOIwmoJpOawHdXT+95lG1Q8vVU4PikXK19hiXxeJh5Qa3cgCVDyuntnp0IOmYhOlu3zgMGKRlrPFij1BdYXq8mRxKKasdO1jWCjpG+K5TBznSmjrFM+L8Uz+07wP2C4HLqECxHiKYUk7+6/QxTkisQ6jhFDJpR51SqNwL9LTRkvEImDMKm84v0q4qqmPvSOAyj54rudP1FBdrqh5MwFAskPc4UMXFSN6NmI3oaAEqjphZKFAbx0IGJNAVJUsygRouCdsKAXVxciwUaV8T28MgQ4dUk1Cg10iBHWQgfWCKNBWY5aREDTIFKLdTZmZjArQvqZDjEGQwmi0LBUYAWbjBxXEudDkWUkV25CwXmWRlz0KB+XiuubkjssrIgWQCw8EcqTGeHM0lY3Opmk3k8gWZ6GZ2TSRAmZILOc5HZuTFctN8iCncMB9ikgsiAcqf4kkmsHMpNbUPlaKV+CUwG9DxAlTznYJWesfYCUilV/5jrypZPXEmV+5TG/fCBom+KxdrOR+ewgi3dNd27jfV4VcN879+N1GZ9WLZrPu//eixX77Pvj13hwcq89JstgeT5eRclmJT30j+Afym750="
	,['bp rail_hjunktion']	= "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"
	,['bp rail_2tjunktion']	= "0eNqlnM1OG0kUhV8l6rUd1a3/4hGyHM1uFI2AtBJLxiBjokER7z4mNsQmZfp88Q6Q/XG7qm51ndPH/jFcLR/Gu/VitRkufgyL69vV/XDxz4/hfvF1dbl8/tvm8W4cLobFZrwZZsPq8ub5t/XlYjk8zYbF6sv433BhT59nw7jaLDaLcff+n788/rt6uLka19sXHL1zvqfPhrvb++17blfP/2jLmQf7mGbD4/YnSx/T9h98WazH690r/NPsN64/5l5/u1ysTtN9YPSgVU2xUcPSsUiv2PvNFvz122b+c5o6oxz33DhNzTrV69TySr1+WH8fv5xi+rJnhmNm6DCrXqnTK20y1Vedak7HZoA1HQvWgHkdCxaBBR0LZsyijDUyZXp/GZkyvcGMTFnRsWTK9CYzMmV6l4EZ83qTgQnzeo+B+fKgxQBV7jAwWV7uL1Kp3F1kUOXeIvMvdxZZqnJfkbbycluRPSDIbUU2rCC3Fdldg9xW5FYQ5LYi962g9xWZraQdtU6dtHKPKfcVOWUEubHIkSjInUXOb0HuLHLWjHJnkbN2lDuL6IL4q7OuFl/n43L74vXien53uxy7wm6P9k89mKi0DhWcf6uJepogRn4gdsdY62ETboA31NKjZqw3fxuEbrWFTNXr0urPVOUq0wmrqXGZKWCT45pQwRqUr216pSbPhaZSauBCU8FGrgjfYFMPm85u1261GVdbp9sqlbPHoFts5apYwTauigVsdlwVK1jjqljBeq6KFWzgqljBRqyKFWrCqlihZqyKFWrBqlihVqqKFWijqliAFkdVsQI1qooVqKeqWIEGrIoVasSqWKEmrIoVasaqWKEWrIoVaqX6tU6fiUvDUlsotTostZ3wAMLOpXZr9edqjS41MFugTbsCNWL9rhSasH5XqBnrd4VasH5XqBXrd4Xa8CPZ+lZs9lZBc/gIn6fP2s3wobhOy43mRR1n+y5I0xtWU60Mq2xcI3rU/YteFJ+kJeTmvNxuS88iaJmw2nsk8THxienpPs6tZBjpHLU/gxfFxTHn6K2wTk+8OaO3lzzdBOY8zThIA2wu4F1Lyk6YY+3l0ws+f0zKeCTsFeTp/cscNzaistKKuod5OMpVA2NuoyevKEya4VNiFhrOjKy0dxZad0UYbjxthEFW4+UUIuVVIvZ9JWzCvq+EzdijlbAFe7QStuKTmIRt+CgWhYULwhoerARv8IhnwsZAwhpgefmALVoJG7FFK2ETtmglbBYnbH9wFIKB5nkYSiqVh6EkLA5DSVk7HIaSqDgMJVFxGEqi0jCUBKVhKAlKw1ASVGysfl91T+N6YoMsqQqdZAnaqJMsBU0ddZIlqjHVawrTU3daqjRQd1qiRupOS9RE1XMU7iwxn0nt11rOlDN9aqVKX6I26vpKWWtHXV+JatT1laieur4SNVDXV6LGP0ptdaNAdpDWmEhtudfAkuSWJDEINX8Vx1IYzEBiY7dWhSiY6XmNLrM/AKI5f/r6u6UehDXeD5idnq+udjtIa4CAWX9RgYjGfuE75UMWgfoMEjVSm0GiJuoySNRMTQaJWqjHIFEr9QIkKjYuFGpxVLRLVKOaXaJ6KtklaqDqWqJG5AOYsP2XRPW6VGiGcl2CFqirhXCl6QGNOVhTDVbqhRuVns+Y6+u0GnQVJKhnpoLEDEz+e+FEUaFPIdUJbQohQmN6MANMfDnrhNZnVuKmmGCm1MZ8D6VKPYwBNjw9iwG2+0YNCglK/QkJSu0JCUrdCQmaoY0gQQt0ESRohSaCBG3QQ3DKR4odtBAkqEEHQYJ6aCBIUJy/MCXX4Wn8wjF6onkGkZvhgUoIX3hHM+9++ujn1eDF/OS0hS62wVqVAQCxix6zdJniF9CcvPx+pZ5V6oUh1YMWWb/6CGM32vK3hJIsrGctwyCLiC1oo8l7eFR8S2/ioXAefkK7mUd/kK+YSCzsIdPr9CBb8f4TpXfKUoMUQa8KfXnTyZno7ncHUQrBkdzdqc36Fx7VW97LQnxeiV1Sgrtl/yO4Xv9ai/cxYsrv6LqOhj52sZVeZeyXBz9Q9Yz5PNt9T9nFwdeazYbl5dW43P7tr+27P/i/P3x6WO0uYDZ8H9f3u82ilm3lW8FUtoP1PyHSHds="
	,['bp rail_o6junktion']	= "0eNqdmt1uIkkMhV8l6utmVHZ1/fEIc7PS3o5GK0JamZZIJwIymiji3RdCBw3gTp/DXf74UuVjl11lv1f3q9f2Zd3122r+XnXL535TzX+8V5vusV+sDj/bvr201bzqtu1TVVf94unw3XrRrapdXXX9Q/unmsvuZ121/bbbdu3x8x/fvP3Xvz7dt+v9H5x9cjbQ6+rlebP/zHN/+Ed7zsx/C3X1tv9C07ew29VXID2BNts96vHXdvaxlmuUDqBsYfwJc989ztpVu9yuu+Xs5XnVXqPcV6QGXdCX6wmYfc7NU1cP3Xq/8o/fNwY1nqjL1/Xv9mHMVH6A+nNkMJAJQ44QrUVm0DXcae9yuXc1sAXc+wCVco6MBlIc7HxxoOZzarKowlLVnVO9RYUDxdlQy6biMaOO2NRcJxw/I5u3nFQCCb3USSxoBB21fDqqXAWpyU2w/nngRsCrMk3NgFoFpY5ALbXUsdA4bVUFM84XYlkGUAWPlUNUf2A9sFYPayVDtEoz7QLa8NgImAAOrjGq6QRgrvrLrhYl0WtrAH3wWJIhy4sC+hQe20zr4+FwGqNa+nihqTptWQ+HUzpCy3SS8v488pe/Fl0/flpLOJ0AghzXnoiqxraEqRoeVSNUUzU0qmzzWl7rE2Per6xrmgGtBvVUChekGvQF45LYBq8IdZAtA1S8IlTFqXCsDcV7mPavxoNyycmu2b7XNQ19GNrXsQB6vL1J64LSRPbos1eWMFudm2p6dXByYnwFTk2EWwdHSxzNuzKdimyM0rHbAJv0aJSVI9NPH4qhuTGjeSShhUDL0pj2pMPExtyYXzySXkIGTwdbHOtRINChAnhRdMz71Mk/xTJoFDql6qUtrY1H5TxdgG0TF6HP54Bp0WPDUt101EQ+atRUJ97wEmnrnNj4sxeU2TQl0FMkHCYjypqPkY6Euun6Ngl1RAhAVEbiL2M5ebaMhUI5NewR4ZDqOAWu4jSv9CnSJaazS8yU2JB1JiZTFSbw/pMKGbnmurIjfQPSMAtbJSkA1dsKmquTxgq37FmZzXMwN6QoNiXcVM1cbdQ6/XIkKw9EGTpGzCIuZ9J4NqWwvheBvpBjL9cIVLh3rDRdtRRllTBvOcWTStiUhnpHStMppwTy2oqowAYEwkxsakxIxi2ZzWoj/fBS2OdIAapbcY7rc4hMl4DihHrjv2SanT6n5LupADWgOE8WwVA7XlxDpmjIl8SF29JpQdKpuMgeRIK0aB2daZCGgjg28yCdGnFshSZIi17cTcVBQYoDIcYKhl4Y0lAQURoLdNhEPNm4Qxqggg8XjJjAli2QrXWkvyYSWWpE7JqoMRhJiFUzMwVyiTTnSti5AmgCgp0rQJqrgs4VnKZADmGLLFbJKSCkqS7EZMFARQZhlJzZgaaglJzZQUYVRCM3BXItlm3WRA3WqfmWI/hYgTPNaEaSFmZATwWQ24MPC58DelKgqsWzM6Ea7BJYPDsUqtHm3DAVOoYix0LHMORcqIbrOvRnfZzdnf816ltXq8V9u9r/7N899u6fO53J3ffX/vihuvrdrjdH5XJSzVJc0t3uf0iDX9s="
	,['bp rail_o8junktion']	= "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"
	
	,['bp rso']		= "0eNqtWtFu2yAU/ZWKp02yO4MNmPzEpO1xqirHoQmagy1MulVV/n2kSequJeReq0+RE/vccy4cc7nkmSy7nR6csZ4snolpezuSxa9nMpq1bbrDd/5p0GRBjNdbkhHbbA9XY2u0bXU+NO3vnJJ9Roxd6b9kQffZ1Ye9a+w49M7nS935Nw+z/V1GtPXGG32k8XLxdG9326V2Af0V40DUN9bnbb9dGtv43oUAQz+GZ3t7CB3wclpk5Cl88hAjPOFd390v9aZ5NOH2cM+D6bx2MxW3/e6QNfpG+93+IP8daYYjLT6NctsPg3b50DVeYwiXOMLq0wgb11s83erSxLo8H6oYDn/FacZRb5edset827QbY3XOImj1EawMXJ1uzRCdJh/CCDzdMkZXYunyWXRrbBg2K4xChqGzohwSigpTzQtDwWMszhMyIysTQhx/qmKgDAtaAkBLMKiCg1ZYUIh8jvcNi/mGTgYch8748HKKQKjbk11oFGMyn7GjdnGMOoUw+arrwxzcNOEdt8oTaPKMdj1Vk5nGbdN1ue7C7c60+dB3OgItEkRZAZGaShajWKkVWCpjEHYsxa7EsqNwdhVuIIoUTw5QSlMAAimUwXVC7FCmuGHdgJghCmB3Prn9f8CM9Ds/7Px9KJF7F3ADjDPrjY+99ssC/IqKm5nFQCkWlF1PSoleSyCg6LUEMHwlfC2p4TnlWNB38kUMVGDlQ0AletUroiV9DcdRCRiFphP1ewV3ymkVLa7nqoI75bSYQkAZFpQCQOFOOa3NEKaIfRAHg3IsU4h8gWUKAUU4pQLLR9imBIMqLFOAfF5gmUJAEY5iUPkc4SgKBi2xTCHyKyxTCCjcUQVYPdxQ8IxKJE+I9hrJE4IJdxN4igq4mcCuFxTJE6BdMCRPCGaJ27NUl6sFAfdPdEGK1YMCbh/wu1MIJE8IJrY9dyxz2NtG00s7dK0bl//ZaN1Fm4mTox6a0Sd2TDIxTpOFdmHf5dauD5/J/UDxYZ90bujasFuKMZUFbl6Jy9WjpAi+ai5fBs1sfTmzskTXy9GelcT3uOM945k97grX/5TYVkM+zf4r/pegzptMpLKe1RyLYymsTg7VWRfz2vvIkaopJJ3V5RTUbN75AJYnukvHwJmuICmgiRTwOV2+OBTWOBSsUs46YMEOUw3IJUvoxxqqhOpX805+kPoVxE4JNymGrETiKCV06RKx9MU6Zgq/APEoNfwpTvSsVgl0ycIvlQDHDm90OCXO2TIhvEbXLFcJ32XH8/PFmz9xZKRrAmj47ode3fw8ztgbesu/jTdfvj+eA38NN4aL8Vi/1pKxmqpChun0DzkQU7c="
	,['bp rsu']		= "0eNq1WlFvmzAQ/isVT5sEGza2sfMzNu1pqipC3MQaMcg43aoq/32mSUvaGnKH1KcoKf7u7vOd7zvcp2TdHHTnjPXJ6ikxdWv7ZPX7KenN1lbN8Jt/7HSySozX+yRNbLUfvvW10bbWWVfVfzKSHNPE2I3+l6zIMb26+BAedVvXhs9srRt/sZweb9NEW2+80SdHnr883tnDfq1dwH9FGVz1lfVZ3e7Xxla+dcFE1/ZhbWsH4wEvI3maPIZPHmxsjNP16Y8sHdZ71zZ3a72rHkxYHFbcm8Zrt5CBOgTknz185eL2ONDxLgQ6TcS0/ywYePHDdoeBsw/AxStw1fd6v26M3Wb7qt4ZqzMaAZcn7CJgB2ZMF43rgxmGNcMXmeFYM3SRGYE0QxZZKZFW2CIrElcc4pNKo267TrusayqvMYWhEIUhxrJ46/vZo/bgJ6pkqCgMS+qTWDKutXiOCEGQpJaTNB5S3lW271rnrx1RRdTfAg9Eo0AMDFSOxXMZdgyUg0EFHFRgPaVvQWkMtMR6SgGeSjCojIYvYqAKDKrAoDTHegrglBKspwBO6Vg5fdcYH46DSKqrb+emSKIKAV80eRQHXjOZmoEZq8TYXrt4SHIuoLEkmjZ0vl0Vzq5NNoNWvqBdJxxeGWcfc0C+wSvj7CoEdKyMfl81Taab8Lgzdda1jY4gixlKixyyKXNZVsDT/+wJIMYC0Tg4GLTApg8Dp0+BqBEGdhjeV7ICDCogO07ndrzE8kjgPCIqhoJDVoiDEArKclwZ5jOMMgLYEzIHAK+XHBwgvH3ASWPI1KHgzGGQ9lLMcQgXXODMY/CuAi5gJpEcwk8xpgCqg4+i4/1AcJoE7joX5piAG2Cc2e6iowFHlg+bFhYc3oGivSLGBB8L6r7q/Qy75UxKcey7lJOyIJfz+vOAt9WVy/7utG6iXDL0yJtPDXOTr4U4hzIyJ+G4wA+eBO9riVa+cW8lGic6dXKF1YHk+jkgcmwblmcPr2a/gPSjs6fRgAXFikJIwAVWFEJA2SI1HY+aY3eEg3dEYPUlJPYSqy8hoBKSO2yGRYWVgACvyhwrASGgBLvfFLrfJYWwSKZZLAukIoTEy5CKEILJl8joeMjY1wMEvBslUhpCApdIaQjBVICsodMMSmxLKaAMSrhGAx9fkiJ1HwSzADA4c3hJhvQpjoIsCjEtYaSAyjYR28vYC0+JV1fRl/pSLrtpZMjrLIV2l0XvlfJlN5ZIdxVZdmOJNUMX3VhirRSLbiyxVvDzz4LLLMXRo8sSK2LBvT4/QpBL3KFSnqFjUBJNOEcPcUqh+b5m5DY93Z6uLv5fJU2aKmCG337ozc3PU7LdkG/8e3/z5ddo+Gt48kG7/tQ6ZEmpJCovw/n9H+OPon4="
	,['bp rsgo']	= "0eNqtWctu2zAQ/BVDpxawWvFt+wd6LNAeiyCQZdYmKlMCRacNAv97qbhxjJaqdhc5BXLE5XA4uzuknopte7J9cD4Wm6fCNZ0fis23p2Jwe1+342/xsbfFpnDRHotl4evj+DQ0zvrGln3d/ChZcV4Wzu/sr2LDzsvZwTHUfui7EMutbePNYA4Y7ELny72tQ/nzYG17M1qc75aF9dFFZy+LeH54vPen49aGhO0aZFxmrH0sm+64db6OXUgz9N2QxnZ+nDvFK9P7j+nPKk2RBsTQtfdbe6gfXHo7vfLdtdEGIl1NdxopZzfE3Z3H5f+FmeMwV28Guen63oayb+toMYAFDvDbcZwRBhSzvAaph8Eet63z+/JYNwfnbckzypAX1DrNEWzj+uwe/zONesXqBxvSwjKh+SW0SaF3LgW//E9nwulXeR3rti1tm94Orin7rrXTkXWOATOVnJNZYXJhVuAwVXaZMhNzfY15SpsY9iFt6m4G3Lgxf0TSnWJ/irntYBUWrZ5Hy16LTNslFR3qBHpXTm84fL8ZRzDB8vxeaXF+ihWBk9X/VMUkkgyW5ZnnQitkztJSlmliaRDIeQySqZdsVgCqVsTYEhB7jY3NwLg5Oj/VfH5yRgQMIINzLGAJACwAXSMvhlwR4RJfRNRUEZmurVzBUUsAao1HLdGljxtaTUHmOl8hfAAHkLPGyk7My05UhLbLz/MkC4ZFywFoOa3rAtgVgtbD+Hy9EETfWeH0JjC+kwEYoRnPKntaMASZMYi7E2gvygA6w6ZaNR9TVjTtAnZKMpp22bx2JafYxKwGpCCVXWQWSGKyIYu7VDSzBaFc00IDKpE0NFcEQY3NQ0AaSqLrBDChsKYT0J0UA5shQFIr/DGQ4Q2cgttOQBNVeNfJ0fZN0Y6EyARXGt5NAc5WGaTeAN5NrfBNVQKsm8J2P8DxRtO6H4BZTWt+gHOe5rRWgrx70AKuNMDJT0uSbcte7GiFV5iCuDatkRIDHPk1sbkBbqE0trkBbhD1mpQRAAWYipQRgKsawyhuMH8TjW9vGt/eDM1zIjPYSJpjMwDGCRloADXeYBMQcINvDNhLAK7BDTznWB7h3fLy6Whz8/FzWbR1CpJ++2J3i6+XrV2wD+rjsHj3afyq9EzZcvH54YXs92lQehguSFeG8xVbV4afz78ByF/CRQ=="
	,['bp gso']		= "0eNqtW8tu40YQ/BWDpwQQE86b1A/scQ85BsaComdtYilSIKlNDEP/ntHKtrTxSKwa7MmQLfZUd1f31DTHL9mm2/vd2PZztn7J2mbop2z990s2tY993R1/Nz/vfLbO2tlvs1XW19vjp6lpfd/4fFc333KZHVZZ2z/4f7O1OKwWH57Hup92wzjnG9/NFw/Lw/0q8/3czq0/wfjx4flLv99u/Bisv9s4Ap3rfs6bYbtp+3oexrDAbpjCs0N/XDrYy/Uqew4/qrBEeGAeh+7Lxj/V39vw7fCVr203+zHR4WbYH4MmLly/Pxy9/x9myWGWvwyy73wTnu/bJm/asdm3MwNbcbDdL4PdBsj5rqtnz8DV78/X0+S3m67tH/Nt3Ty1vQ/5+kiNV8AurDH6pt1Fk/xhGXOG2U9+DD5FTJuz6Yc2GD/9zUbM2Ws1cZXKZcx5h5tRb2Z+wqYjRksam4thq2hsbhmbKN6t7gMtxscx0OThml0Z9TnE/pV/w37e7edYuoUgaVUksUqce0Q3hAWe6uDUQ36DYjIaKhmzreAESDz+bLm9MsRexuVHoT/6esz/efK+iwbGsOABYgtLkEctcKftr1EHL0odXyNmFC9KgxutiHjYM0cWq0cWMFoHU08K2KiFQyAlixTgmVSJe5LmuofUbPcw52pc6B7yXIDTtu66/CQqgqTYDZ2/btpElRC/3dmoHX6/s0C6+A0v7iW/45lldKpAlIeMehtjvBJkYuUNl5VM2yZJoit6KwPSrjTR/WQ8X8u7gTrX0dd6mm8Up4VrU1m2aSHhcCRQAwAtWaBIQVSJXU8vA9YFIfPVcrFpQbcWHT3kSLq16OVIakWjU1F0mkanAHSGaHwayIVN1NoK4A1cPPJWlkvUirplpSJ78qsx+ZNEf1s6dhQuuB3kFrGNQF02cDKMZIUiUCtGsa0MoKTRLFLEfcMiBYrR2ERJK8gxiyMasAAizGs7GeUpr+3kclRtQaMTMXRW0OgEgC5R3JEptyqxL4vlWrCabC8ApazhT83ysKwULa3qEIY5tsPECUYLOYRfVVpPkRy/XJGmF4tlejmRdEiOhthJthcUUTOKbQXFcqacZrHFXTQsNoBFzuIysViubueSjsdxf8ukBsryu6LPscW1Y+z1kV5ZkEdwIHWlSBGSUdqXkpyPAtVdKm7zQDxmBV/cWVbhASVesrsP4q1L67wSyE2J60TgnF5WbIOLqsSqYBscsIVX9Awhekiv6BECcCyoFN585XIaKp0mBYFTUcW+UEIyY5NehqnL/v7hSsTHVRyJHMkbq+eQaFTcABFImijYF0kKeYUs0nSnId/tFhLvUQZ4W1fQ47royEUU9LhOI1E1LDoTR2dZdAZB55KkGJ3yMq2BGaQWKrIPIFkTrKxDgi3IoR5kU6ZoxTjFBDvLgyKpSaOQ1yatVZUkb4VNU2rAyyohXNIh2cVTR8/zbNwOPc8DXqEJSc/z4l5Kep6HXN2REhdrwItkcXHNgTkqX3FZJzVoluiSlYFQ2tN0oGPvRElWCUKsKDnZhpQ8cRPCwVG+uAgBAYWuyAkSKBJRJdOaaYkAVrimrIAaVvRkL3oPVSh6tIfc11P0vaEqjs7hnQ+5N6cSZV6FZJiVeRVya5OVeUh2NFs8EFL2Qt4HpPer073y9cV/OKyyrg5Gwu8+jd73d3+ddoo78Yf5c7r77fP3t7Hp7+Gr4cN0yn3ppCxFVTh5OPwHlEBTxg=="
	,['bp gsu']		= "0eNqtW9tu20YU/BWDTy0gttw7qR/IBwR9KoyAojc2EYoUSCqtYejfu7JsS01W4swiT4Jt8eyc2+zs4fol23R7vxvbfs7WL1nbDP2Urf9+yab2sa+74+/m553P1lk7+222yvp6e/xpalrfNz7f1c23XGaHVdb2D/7fbC0Oq8WH9+Gr4+M4hM9847v54nF5uF9lvp/bufUnIK8/PH/p99uNH4P9DytHqHPdz3kzbDdtX8/DGJbYDVN4duiPiwd7uV5lz+GjCkuEB+Zx6L5s/FP9vQ3fDl/52nazHxNdboIH8yukD+fvD0f/f8AsOczyl0H2nW/C833b5E07Nvt2ZmArDrb7ZbDbADnfdfXsGbj64/l6mvx207X9Y76tm6e29yFfP5fGG2AX1hh90+6iSf5pGXOG2U9+DD5FTJuz6Yc2GD/9zUbM2etdcbWYy2D2PXD9bj/HYLoPu/NY99NuGOdrVtXZ6gVYHTFa4kb1ewQiZioam1vGJgomkjLqs/2I67CfrwRWCLLOiqQyE2fS6IawwFMdnHrIb9ScjIZKxmwrOAESjz/bf28VYi/j8tr5j74e83+evO+igTFEnuNp1kiamcZUC9V0tUsF3qY6vkbMKN6mBjdaEfGw56pZDLQsYLQOLkYpYKMWDoGURAhccuVJlbiRaY5hpGYZxpw7doFh5LlJp23ddflJiQQdshs6f920iconS287NmqH3xMtUGr8phj3kt8VzTI6VSByRUa9jfWAEmRi5Q2XlUzbSslCV/R2B6RdaX4bMtfI4Or+oM599LWe5hvNaeHeVJYlXCQcjgRqAKAlCxRpiCqR9fQyYF0QZwO13Gxa0NSioycjSVOLXo6kVjQ6FUWnaXQKQGcI4tNALmyiHldA3cDNI29luUStqFtWKpKT34zJ/8n496Vj5+eC20FuFbYRqMsGToaRrHQEesUolsqAkjSaRYq4b1ikQDMamyhpBTmbcQQBCyDCvLaT0TrltZ1cjqotaHQihs4KGp0A0CWKOzLlViXysljuBatJegFKyhr+HC2BeZ+lVR1SYY5lmHiB0UIOqa8qjVMkV1+uSNOLxXJ5OZF0SI6G2EmWC4qoGcVSQbGcKadZbHEXDYsNqCJncZlYLHe3c0nH47i/ZRKBsvVd0efYgp9plQV5BAdSV4oUIRkt+1KSE1Ogu0vFbR6Ix6zgizvLKjygxUt290G8dWnMK4HclLhOBM7pZcUSXFQlVgVLcMAWXtEzhOghvaJHCMCxoFI4+crlNFQ6TQoCp6LKkPyFZMYmvTBTl/z+A5jYKo5EjuSN1XNINCpugAgkTRTsqyWFvGYWabrTkO9/C4lzlAHe3xX0uC46chEFPa7TSFQNi87E0VkWnUHQuSQpRqe8TCMwg/RCRfIAkjXByjok2IIc6kE2ZYpWjJeYYGd5UCQ1aRTy2qRRVUnWrbBpSg14WSWESzoku3jq6Hmejduh53nAKzQh6Xle3EtJz/OQ6z1S4mINeJEsLq45MEflKy7rJIJmC12yMhBKe5oOdOy9KckqQagqSk62IS1P3IRwcJQvLkJAQKFrdIIEikRUyTQyLRHACteUFdDDip7sldH2VfRor0QimXC3tkKurAnlcC5E7tapROFXITlnhR8SWl3QU8OKvvwiNNtfEHT+Ft8S9PvV6QL7+uKfKVZZVweb4XefRu/7u8+n3eVO/GH+nO5+++u89O/hu9/9OJ3Ko3RSlqIqnDwc/gPDhHgr"
	,['bp gsgo']	= "0eNqtWstu4zgQ/JVAp13A2hVfevgH5riHPS4GA1nhJMTIkiHJsxsE/velnEycGVNyFZFTYMesrm6ymmQ3n5Nde7SHwXVTsn1OXNN3Y7L95zkZ3UNXt/N309PBJtvETXafbJKu3s+fxsbZrrHpoW6+pTI5bRLX3dv/kq04bW4Onoa6Gw/9MKU7207vBktgsBv6Ln2w9ZD++2ht+260On3eJLab3OTsixPnD09fuuN+ZwfP7Q1kdnOquylt+v3OdfXUD97CoR/92L6bbXu8VMhN8uT/Gm/Dj5iGvv2ys4/1d+d/7n/z1bWTHaB4nVkf2nqyyRnsOMdbvIva59Ps+y+EJUs4+zDCtrWNH9+5Jm3c0BzdxBBXLHHxsZH+eX2grDXH+gOXx7WcUM5mSVXLy1l7+Hs3+Pk9/1MHUHMeVd1GLQhUAXMt31CPPlLDw+Ajd7+Im4VxN2/z0h2O81K/MlNRZkQ4KLfNzARf7Xytxyl13WgHv4xWfPnFSB5CvaS+ehztfte67iHd182j66xfcNfg5QXbI7tX0q9cQhYka8EELFzp4NqOYu3IODuatCPizBjSjI4zk5NmijgzBRu0LM5OCWeSS9IL4VQ0jgru0xmfL+XPqpUhWMHDitsJU0o+D0sAVtGZS97OXFLzZAUAa2J2DbGUzvvjtJDPZQ5HpcJn8KKzcV+3bfpyWvNntUPf2uVsLoKLt4QZFmswFy2tIOSwj+qiqbb3WeSx9vN0v8ZOr7BTAmGncHaSnAG5Rk6xroo1NE2iZWtgBogbnnpUDsARs0DqYHWFlGTYzBpYRYLlK2A6A4JWwkHTiBTwXKRJJYi15aYVvSHLIA6rAbGmKG1oVmEc/lqVARNQ0KjItJYR952M3x91RbDPQlZCJyeTRbAX9GXNCJo8EHpDnM8qdJUYxYICpyhDHM4KmClR0sjhBZGzTAUAWrBMg2nB4LeZ10sz4jChK42C5hkLCkQxJ0SkYKaEhiQMqlimiPuaZYqAMmVB2H1cQ3CizguWKOJ9SRJFMIlSAep8gcsJXqOFIHkCvheS5Ilg4lqCRV/gUoJTXmFInojvOckTwcSFBO8hBa4jeCMuKpIn4HuZkTwRTFxHBep7ieuohDEVyRPxXZM8EUxcRxXse05iIjxxHQl48ygvQhoPrZsWrqB//FBmCILYf8TyWbPK2KtsGIavTAP17krSqEDXsVJ0BRmodlc6ooAs+a6jockD7cAqZ0v1CGhcUTpYv6nKuH6lft9Hunpmcm2mIkvfwMIQWYYXwoPOi0zE9VI12UXLJMJU454rvMgO4emoIvtCUE1c45gOah5XzF9gXUQV8xfAyqieNh2BCu4ZIKtAZHDPAIITMT2DcEDpRw86KqBCRbUmFjjrqNbEApiJeldAByCHOyDQEmBFVa2FoIzqfyyAVXEPKNiASkRT+GFIEC8VxFqSJp4mvB0AgziKPklqxE1NwxoE1kR0KzTfaxGSPvdp4G2Z5N/1QVGJedhnYqJCvwIKPyZS9N3KnOYny+enoNt3D7E3SVv7cf67T4O13d3fL4K+8xfEP8e73z7Nj1vPN4bN3V/ffwTmdz/Mfxhf5qkspCxFlRVeZ/8Dh/I2ng=="
	,['bp bso']		= "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"
	,['bp bsu']		= "0eNqtXNtu20YU/JWATy0gutzlXrh+7C8UfSqCgJYYmwhFCRSVNgj0711Zlq3IK3LOwE9GHGl2eHbOnsse+mf20O2b7dD2Y3b/M2uXm36X3f/zM9u1j33dHX83/tg22X3Wjs06W2R9vT7+a7dsm37Z5Nt6+S0vs8Mia/tV8192rw6L2S9/rXdjvo+fHx6HTfyZPzTdeIGhD58XWdOP7dg2JzbP//jxpd+vH5ohLvIKdeQ71v2YLzfrh7avx80Q19ludvG7m/7IIOLlqlxkP+LPKq4RvzEOm+7LQ/NUf2/jx+Nnvrbd2Azkgy/jI4zPnF5N8PlwtMIVaT3z/Ldp+7jKmUy/3R9N9Q69FJrk4yxSr77X0SKrfNkOy307SmxixDa5MMmqHZrl6f/Mq4E2+/GGhazQQvrjNDM2TZdvu3psJMZxYuNo2jj+bTt3u2b90LX9Y76ul09t3+T6/VLqtJKLK8V12mf0pn88fnrft8klKuESVWKJ7fFHAjvI9lapD9vbpotmHjZ9u2T0rwrpHp+pE3ushMem+jgPaKOF5A6gxEem4j1Alb8uNg51v9tuhnHudHZJ6oZEs0k0K/Sd/CwTc+k972LX+4WcdKGKW0d63uSWW6cSbkP5duhc6icFHThoOw+tCyG0hllrxUEjrN+8te13zRDPhpQwk1RdCq8E8Eoc7s0ju00U21MdT5NVPgt99eQ6BW1lRjX4djkKGdktL0O2E8eTvvKy2zY9xjvUqIENje7W4X87eRY63HklwM6l0OEU7sul5qDtvLOUbDA0KX2UbDAsk2iWO3gNYFHHQZcAtOcOXoR1xUEjrN+ccN2s2v06P+W7Mdvdbrrm9vme3DlTcFVGKagyjMKjhpl3BKOFBphSrimp0xyQgDEUMqAAY6k4kTwHjKOwEJZX3rXbdu2Y3Hr3gnkHnIJG6Fgel1VAI6aHbWCFQayC2VpFISd9wGr0ycOEkqzQk0LSislnNUKHP6c0aZ6WSywAl7eOg0aU5Ml4rZM2qFDfzJW+e/F5lUQKwhT+tQxOEnMFC6fmbegUVA0VZ37zgFq6KUWSbEr0Dim18oBzlfd1Q5os0LhxVpqjVFOicFJR+Ck0T6IhCquk2G6KaSDRAKa+QORlYXl5JZaXnZHXzdLQa/j0Ku9uPMLiRb1ftkO7GSJ6BBvax6f0gtLSy8Bu7g1X3iBbbLkaBNltx0EjrL2gZaUBA1cCPGTDAlUwFZJbmYJri+n5Dk4lKMUAY1SaqnEAhVVcXQYIrDJUxYNw5uoyhLPjLurUpeqeL3wem3rI/31qmi6pPC/tGiKaE7ciFQAauFQb2MZAdh4B1oHsPAISCZorEIpU5hHIXmOyRAjiVqOeYCYNaurt/J05zIL8cv8FnMiQg+dKB+Q5xEnoC3Z696R3agHlqQpxsRdu81SF9BqtwolKfcvj0KVYdH5aczfTZlVIHdHhj2EpaIVAS3NNi7P2FDTEuqJKBoi1uCw0E26jCqoAKYDbeKUoaIVAa6oAgViXFDTEmrvvBhILpaj7bsge1H03ZA7qvhviXDHIEGf4lsDBe6cLKrvXwuReaUVe3xfE6JbW5GJKPCqgdEml1YiStKGgESlpyyXZOj2X5zi0Mo3myek26TCYxtozaurJA5nvArWgKskcFcJW3GSf1Mal5rrxaXOX0MWEn0IwCIKbQrDcrKLYco7sausDNN7quUwOEhc3ZglBc2OWwC2nMtyYJcLacGOWEGvNjeSkz96LkRRJh1kykaOMgfvAQI9dGUuN5Nx4firhhCTgGWRIAVTCCXEODDLC+Xo4ZbYvC/R61fVcyixoiYBqqiOLmFc6taIUbl8udUT8zZKpo0m/yUCmjjfei/BUdDCIRbmYZhHoQEUHhLXjYhrCGpxoSVFN6soJ3hewCB4XyiSvsCnHNVUMcO5cjLFIoC0CTQU5SG5UkIPURgU5iDMV5BDOvpD1axBVe0X1a+wvqj7nR+u2P357NbRdumvjtTCiIsq+nmiZBUU0LZ1lUQoWiOeGNiHWTjpdqidiqfdU0IekXHFhOv0ypA/su+8eqm2rgiydHfBmvaoUdXPjk6ao5H8GwLxaQnjvq6SDLXn5apU5gVTsq/te3nKtuOEy6DHYl+yZx/BwHQy8z6iuR13mqZfTQppgHpgwD71EWzDIHjDPxfgLlk+5FOnkKR6kURICLck7DEdcmARDLkbIXjpFo3DvlU/RKMx7Py9Of8Dg/uLP4yyyro6g8Xd/xt99+uvU0f1U3JXe/rH79Nvfb4v/Hj/8vRl2J3VWXusqKt3rw+F/lXfFTg=="
	,['bp bsgo']	= "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"
	,['bp gso']		= "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"
	,['bp gsu']		= "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"
	,['bp gsgo']	= "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"
	,['bp pso']		= "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"
	,['bp psu']		= "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"
	,['bp psgo']	= "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"
	,['bp yso']		= "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"
	,['bp ysu']		= "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"
	
	,['bp 1 to 1']	= "0eNqdkd0KwjAMRl9Fct3BWsGfvoqIbBqk0KWjzdQx+u6mCirizbzsR8/JFzJB6wfsoyMGO4E7BkpgdxMkd6bGl4zHHsHCxUUeJFFATVeC549KQ1bg6IQ3sDqrP0kzixzR+3D9wJd5rwCJHTt89n88xgMNXYtRmr0UHBtKfYhctehZ1H1IggUqc0VVKxjBVjqXRl8WM9PyU7KcKalzWc4xdoK8r6XAN4JJphccFlqCC8b0oFebtTEbva3XJuc77XGgKQ=="
	,['bp 1 to 2']	= "0eNqVkdFKxDAQRX9lmedUmqy6a35FRFodZCCdhGS6Wkr+3WkX3EVF7GMuOWduMjP0YcSUiQX8DPQSuYB/nKHQG3dhyWRKCB5OlGXUxAB3wxKcbzQWqgHiV/wAb6vZQLor0m0iJwwhvl/h+/pkAFlICM/918P0zOPQY9ZmXwrJHZcUszQ9BlF1ikWxyMtcVbUGJvCNrUujbxb3b0tj/9DsL+9JgUQ0+ylob+5WRfub4XZrEe2hP0SCgzKXlRsInXKa2Z3EndPghLms+P3x4NzRPrQHV+snT/S2Ng=="
	,['bp 1 to 3']	= "0eNqVlF1ugzAQhK8S7bOpsM1PwlWqqoLEqiwZGxmTFiHu3qUoTdJaCfvIwHzMekeeoDGD6ry2AaoJ9NHZHqrXCXr9YWuzaGHsFFRw1j4MqDCwdbsI6xcJh5mBtif1BRWfGcEpb5yC5ByVMe7zxi7nNwbKBh20WvP/PIzvdmgb5THZLyL42vad8yFplAmI7lyPNmeX/yIqZTBClch5SfSHIjZTEv4AIzdjHlGy7WHEisFDhpP26ri+ExFoTobyWLaCetz8PloRYZbXFnRGh4Daf9pLfhk1QtiT1xfFHDYEuQAw0PPJeEotRPTQOacuL73PlsWgggrlz1vGJWGXaXTWjLrLLbFyYm3jayiI24xTSiIFq4p3oA6qRcv1UmdgarShxnfB7SQKZ+X7tYv7Uog9P6Qlmr8BzhwAPg=="
	,['bp 1 to 4']	= "0eNqVk2FrgzAQhv9Kuc9xxNRW518ZY2h3jEBMQnJ2E/G/76xlLUMkfgq+3PPk5dQRWtOjD9oS1CPoi7MR6rcRov6yjZkzGjxCDVcdqOdEgG26OVgmshwmAdp+4g/U+SR2kMUTqXaRAxrjvp/w4/QuAC1p0rj0vz0MH7bvWgzc7E9BobHRu0BZi4ZY7V1kzNn5XlZlPDrwoaa50j+NSteoDc0xWbNVpki2yA3L6bFcbzQRZys7eTktinxNcU5RyLtCrhnKBIPc7FDtfcFs4W9GE3bMPH4CAaZhjrP8QO5QcHDFEG/4uSqVqvJXWfImfwGN4RCL"
	,['bp 1 to 5']	= "0eNqVlutuwjAMhV8F+XeZkvRKX2WapgLRFCmkVZqyVajvPndFXLaos38hTPz1xOck5QJ7O+jOGxegvoA5tK6H+vUCvflwjZ1rYew01HA2PgxYScA1p7mwrNhKmBIw7qi/oJZTwujMHzoVq3PU1rafD+3p9JaAdsEEoxf9P1/Gdzec9tqjshsi+Mb1XevDdq9tQHTX9tjWuvm5iNri0hE/smmW9Auj6Bi1gknZmDSGye5z6awJAWt/AeIlX0HkZCVrYynIFLFCKQnbkau7qcg61tzZsd3B3MPReH1YfssiUCnYVBUTJyXF9KtZOK1nZUWMqLgZkFFhKUHYLYzxvVECfU2QIG0t5wZCEqAF10lBiEdJsvU6PkreKu6NR1G5YxzRaEqUYIZN/G+IkkyXRVSZ4g5MPUtTMWjKvBkpzIw5wuhZU9yjEacUTApe2/imNkGfsOX+1yMB22Ab1uQmtJscC2ft+8XyqlSqkjtRooRvyezfjg=="
	,['bp 1 to 6']	= "0eNqVld1qhDAQhV9lmetYkvi7vkopRXdDCcQoMW4r4rt3bGB3u4SQXImj5/PMzCFu0KtFTEZqC+0G8jLqGdr3DWb5pTt11Ow6CWjhJo1dsEJAd8NRcG9kDHYCUl/FD7RsJwnK6knJk5SrUGr8fpLn+wcBoa20Ujj/fzfrp16GXhh0dkdY0+l5Go3NeqEsoqdxRtmoj+8iKssJrMdlPyy9YHg8hgUweTyGBzBFNCZkpoym0ACliqaEOqqT18R8mOYRmElJa7Hmmexb6RDchzjHIGgQwWiUDUdAFMb5Ko24uKeVj8iS88ciqDzCJwu3mkcg7tPy7owVqbun/1srfNAyFfoyL+6DVinZoN5m69QTIMZXk5oO/yLOiQeCl8JpIgVzhWe4tGJAyeOnREB1KMMaO9nxVGHhJszswtzUnDfsTGsU/wKnyj24"
	,['bp 1 to 7']	= "0eNqVletuhCAQhV9lM79xA3hdX2XTNLpLGhJEg7itMb57x7rXllj4p4Pn48xhDBPUahCdkdpCOYE8tbqH8jhBLz90pZaaHTsBJVyksQNWCOiqWQrrFxGDmYDUZ/EFJZtJgDJ/UvIg5SiUaj+f5PH8RkBoK60Uq/+fl/FdD00tDDp7IDolrcUaga7tUdDqZUeERHyfEhjxIZ4XO78Q3AdBNxGxB4JtEpI7wZpK911rbFQLZf9y4g1K6tPK3Qh3IbKgNJgLkXv3Qm9GCJylEad1iTuYhU/CV0/79H/ewdsj3wiLUQ9bVwD1scVY6By4ffFQjPMgWeyNidbwqROThGLcblJvzI3yknfmYmaBs+p2Fjrx7piKwEOjr/0lLuYhkOmRGaeB/44Pk4WOCM49Xg3SigY1j7uOgKpQhzW2s+0ux8JFmH7duMg5L9iB5ij+BmsvW0A="
	,['bp 1 to 8']	= "0eNqVlOFqgzAUhV+l3N9xeONara9SxtA2jEBMJF67ifjuu9atLSOT+M8cPV9ODjeOUJtetV5bgnIEfXa2g/I0Qqc/bGVmjYZWQQlX7alnRYCtmllYvkgQJgHaXtQXlDiJDc7iySk3OQdljPt8smfTmwBlSZNWS/7bYni3fVMrz8keiNZoItYEtK5jg7PzjgxJspe9gIEf5DTH+YOQMQhcRWQRiHSV8BpBkKuE/Z1AvrJd6zwltTIUOIy8YdIQ5RBTxj0IhhB5dJD0J4eAi/bqvLyRAWQRfzYMMQ8B5jGaif/XhWlEX7haF0aN8O/0hBFyaz88QXyxNKmGPY8/hQBTsY813JHbFSxcle+WDotcygKPac7mb4Y3cBQ="
	
	,['bp 2 to 1']	= "0eNqVkdFKwzAUhl9lnOtEmkzdzKsMGa0e5ECahOR0rpS8u6cduqG7sJf96PflJ5mg8wOmTIHBTUBvMRRwhwkKfYTWz4zHhODgRJkHIQpC28/g8oe2UBVQeMczOFPVCtPcmHaVOaL38fNG39ZXBRiYmPCyf/kYj2HoO8yy7CfBuQ0lxcy6Q8+STrGIFsN8rqQaBSM4beq86FfFXockT8zC/vi6eXhaEs29wnbljrszHv8d0ea7IvdDjL041wdX4FvxhNkNx40RcMJcFv15v7N2b16ana31C+vUtds="
	,['bp 2 to 2']	= "0eNqdkmFLwzAQhv/KuM+ptNnmZv6KiLTzkIP0EpLrtJT8d68dONEh1o95yfPkvSMTdH7AmIgF3AR0CpzBPU6Q6ZVbP2cyRgQHZ0oyaGKA234OLjcqC8UA8Qu+g2uK+SdpV5Ejeh/evuDb8mQAWUgIL/2Xw/jMQ99h0mafCkkt5xiSVB16UXUMWbHA87uqqg2M4KqmzI2+WeyfLVXzi2Z7nSd6EtHsp6C+2y+K+pZht3KcmzX2a6dRi66ZBHtlrv/GgG+V08xuJGysBmdMecHvjwdrj81DfbClfABosc11"
	,['bp 2 to 3l']	= "0eNqVluFugjAQx1/F3KeZ4EIPFOQZfINlWVAb0wRbUoobMb77jjGVbZ30PjUc/H9cr/87OMO2amVtlXZQnEHtjG6geDlDow66rPqY62oJBZyUdS1FItDlsQ8MTywQLhEovZcfUIhLxFAmIyWylJ2sKvM+kics+WakTC+vEUjtlFNy2PnXRfem2+NWWtrTTe1sqZvaWLfYysoRtTYNyYzuX0moBUbQ0ULJwF5ZuRvupX1uv6AYDhVe6MoDTYKh8ZXpoaTBFPGAsgym4APKil17MV37jA3FaWh+g7bkK3uwhtaJI+1z/XaqaV3dOvCA13fz1pVyjmJ/gfHz8pqpByHiAIZ4jBABiFsWwotAriX8mIR7fPHP00MfNOX2Ywh0yffEyBJK/+MIsWL2eeytY8akBHSWyJmzQ0wPNbFm2sa7W4yZFK/3UHBt4m0mRGbpcbpMmDB63J8Vd/B7JzZyBz9R6AOsnDyS5P4vEkFVkoxiOHNmlsyeNkYf5hQ/SdsMZcgzxFys44z28wkvJulS"
	,['bp 2 to 3w']	= "0eNqVldFuwjAMRX8F+WmTypS4QKE/wsM0TQUiFCkkVZqyVYh/n7uOwZjXJU9V3d4TX9tJTrAxraq9tgHKE+itsw2Uzydo9N5Wpo+FrlZQwlH70FIkA1sd+sDwxxThnIG2O/UOpTxnCcr8RolJyk4Z495u5HmSfH2jnJ1fMlA26KDV4PzzpXu17WGjPHn6Vgdf2aZ2Pkw3ygSi1q4hmbP9koSa5hl09KAqwE57tR2+zfrc7qCYDMX/oXk8FFnogoHOoqHiwmQo8/jUZHRqi2tfa6NDoNhvnHiaX7rCIIrovHDE3TKaIkcoqwg7ctSNFKljJX5WGTmojCnzUB4qdgQQI4CXtgnWZ546TjzmOtstHQZ+7x09x0F3e5usfJ012tZtAG6VeeIO4lu7SJxU3nGR4BjHDbs2/OU4dT/wjlfRFHaWuRMDRSKTzQxlYkfZ7Y6YWCWi0FWlgzqQ5HprZ2AqklEMJ8FN8snDWu/UI8WPyjdDKZYF4lKuREGMD8Y9oko="
	,['bp 2 to 4']	= "0eNqVk9FqgzAUhl+lnOs4NLXV+iplDN0OIxCTkBy7ifjuO6lsLUMkXkl+8n3+5CQTdHpA55UhaCZQ79YEaK4TBPVpWh0zGh1CAzflaeBEgGn7GCw7MgmzAGU+8BuaYhY7yPKJlLvIEbW2X0/4cX4VgIYUKVz63xfjmxn6Dj03+1OQb01w1lPWoSZWOxsYsyb+l1WZFDDGzxwr/dPIZE2+YTmmlyk2NGWyZstyehyu04qIs5UaL6dFUawpzgmKfNNQpZT4VeRrhnrnZFZrXPYOhi188RRhz8zjJQnQLXOcyQPZQ8nBDX244+e6krIuLnnF4/gBClcnzg=="
	,['bp 2 to 5']	= "0eNqVlttugzAMhl+lyjVMiQM98CrTNNE2qiLRgELohqq++8xYD6tciK9QTf35T/w74Sy2VWcab10QxVnYXe1aUbyfRWsPrqyGWOgbIwpxsj50GEmEK49DYPxHCuKSCOv25lsU6pIwMvOHTGBl9qaq6q+HdH35SIRxwQZrRv2/P/pP1x23xqOyGyL40rVN7UO6NVVAdFO3mFa7oS6iUp2IfnggfW+92Y3vskHgExTioUBClwRUR0PllUlQsnhpagKTR2NggrKMpkxpWUVT9ARlzTaC+t8zIKCbG7RDP/qDr/E5Y4VnbHI1vXVNFwRRRUlOmT/18GTjiDL3WWmbyoaAQcI1b/m1AMUArosVidFsG9OcLGJJcnpFOWPz1UyL6y682vxlhFKYVrqKQYwAXPO8u9WaO3l0Ezbc0ZMUBiT31JXzhy4o/mipV5P1ursAnNEidxE0w8o0IWYY0iuC7kHOPNHlvMtgybxrVMQFzb0zVIRVuNMgI3RuuJ4mJ19L7oTBfF+0Yh7ltDTgnuQ0RjONR1MyptXg2Rb4tWmDOSLg/vmciKpECMZgEepFjoGT8e2YsV4BrNVGrlDQDz7jyyc="
	,['bp 2 to 6']	= "0eNqVlutuwjAMhV8F+Xc75dIbfZVpmgpEU6SSVm1gqxDvPkPHYJtX2b8QAX89x/FJeoJNe3D94EOE+gR+24UR6ucTjP4tNO1lLU69gxqOfogHXEkgNPvLwvyP1MA5AR927gNqfU4ElcVDpRFVTq5tu/eHcnt+ScCF6KN3s/7rl+k1HPYbN6Cyb0QcmjD23RDTjWsjovtuxLIuXJ6LqDRLYMIPVAQ7P7jt/NtV4C+o4UPtDUpgLB9jZoylMJlYDYnJ783uWx8jrv0F6Kd8wVDBVqIWhJR8P3oBUzH8qEU7a7YQs0DRSooh7Wj+JC91RfNn15J5KCiolaZM/YRmFDQTR1eTjlmD/WUWB4JhtxAHVzOopSSAirRaSQNId2wtTiDJMUoQQdKQ0QyC+WfryJPbSFOkGVArzBRj+k0mzSm9Bbk0RBy/4vmntZXSi4ujjXPsp7eho3WthSmiL3clDRGN0cLbg3HSWGkIyDZZ6dRzlGXC1pN3nM2lrUcMvkf66PZYc38xTqBtsA7XzCp2qwIXjm4YZ/lVaUyl16rEffsEFxi9+A=="
	,['bp 2 to 7']	= "0eNqVlttugzAMhl+lyjWdcoByeJVpmmgbVZFogkLohqq++9wi1sO8KL5CGPzx2/mdcGbbbtS9Nzaw5szMztmBNe9nNpiDbbtrLEy9Zg07GR9GiGTMtsdrYH5jLdklY8bu9TdrxCUjZJYPmZKUOemuc18P6erykTFtgwlGz/pvN9OnHY9b7UHZLyL41g6982G91V0AdO8GSHP2+l1ArfOMTXABRWxvvN7Nz24CX6DyrqvvTAgQ+4sTb8UCRBAqXZecMQrD5OkYFcEUZAxa1CahLzzaljJZCI+UU6WXIyKYOhkTWyLBE7oio10R6S6O1SNkMiZmFqHIMyVQTk7l8OfRzDFoQR4s8UzdYNQUZy+jAQ5PIJaUPYSj/aPbHF+Hmjp0KEZywvSjBUmyzUXCXi2pU4xXRzZ9iracalZcW5HuTvFqTlTX3e4jnLP+4B1c48pej81sOcuN7cfAsK8kjcDiGLzyimhddHuVNXWQ8COdE+2LlqQE0a8J25eizgBenyK4QsRN4cbwjytUTlxS9IxSBXVJAQO/kiboI+Tc/40z1rWQBzG5Cm5VQuCk/TC3uiqlrETNS+jXD74BvpI="
	,['bp 2 to 8']	= "0eNqVlOFqgzAUhV+l3N9xeONara9SxtA2jEBMJF67ifjuu9Z1LSOT+C+eeL4cz8WMUJtetV5bgnIEfXa2g/I0Qqc/bGVmjYZWQQlX7alnRYCtmllY3kgkTAK0vagvKHESG5zFk1Nucg7KGPf5ZM+mNwHKkiatlvy3h+Hd9k2tPCd7IFqjiVgT0LqODc7OJzIkyV72AgZeyGmO8wchYxC4ishiEPKOwBDiNQKRrobYRxDkKuEQQcDVr8h/CeQr27XOU1IrQ6E6bpg0RCmiKekPRMBFe3VedmQAeYwPhiHmIcDENGbs96EF+0KMzoX/94VyY2HB6WO2tSPG8O+pSTXsedw3AkzFPtbkjtyuYOGqfLf0WORSFnhMczZ/A/77h4M="
	
	,['bp 3 to 1']	= "0eNqVld1ugzAMhV+l8jVMSfgtr1JNE7TRFCkNKIRuCPHuM2Nbu8kT+Aphcj6cc0yYoLGD7rxxAaoJzLl1PVSnCXrz6mq71MLYaajgZnwYsBKBq69LYV0RJzBHYNxFv0Ml54ihlA9KxVKO2tr27UGezM8RaBdMMHrt//NmfHHDtdEeO/tBBF+7vmt9iBttA6K7tkdZ65b3IirGpSNesCO4GK/P67N8afAPVO2HKhKaEtBkN/Sr0WQmKCmXoihKtpsidpuW38PsrAkBa/9mIJ6y30BFAAt2CnIbWnKhYpt5ZLopqEikYCZLU+SOFND9b78oBHv6aUzC/TLl9ozJlAslx19mTK/pHeYMr+k+Cu52yDNBlszt0BTuGCMFD2cT9BUl979NBLZGGdaSQ2gPEgs37fs107JQqpRHUaAfHyAxM5o="
	,['bp 3 to 2']	= "0eNqVlttugzAMhl+l8jWdciiF8irVNNE2qiLRBIXQDVW8+8xY167yuvgqwsQfju0/5gK7pjdtsC5CdQG7966DanuBzh5d3Uy2OLQGKjjbEHu0ZODq02SYdyw1jBlYdzAfUMkxY3iqO0/F8hxM0/j3O3c9vmZgXLTRmjn+r4fhzfWnnQkY2Q8ihtp1rQ9xuTNNRHTrO3Tzbvouopa4dcBFj1NIDxiVjlFPMPp2oLaxMaKNiOMlnxGKQqySIxFXSgYHG8x+frUimHkyU5LMNcFcsxMvqeMW7MSTmJKLERRlw8yT+J0mRSClYNYzhXlr+h5lEo7B4/q8oqjgq/h8H9s+AgVW3OaT/zeK1MlQRWWAami54tab7BqZp+hVfOuVRqw5kicVLwt2Oe+qad1fxSwTIhNPA9swK5dwFSnBZMoEJnsI0DOAPQRojGbeIjSFOwdoSs7Mtn7UM45fG80JAbf/iQyaGiFo04voFwoNZxO62aMslCrlRhTYUp9dStPY"
	,['bp 3 to 3']	= "0eNqdlmFvgjAQhv+K6Wcw7VVE+SvLsqA2pgm2pBQ3YvjvO8amzlTo+YlwcE/fXt+79MJ2Vatqp41nxYXpvTUNK94urNFHU1ZDzHe1YgU7a+dbjCTMlKchMP6RStYnTJuD+mKF6JMXM4GU2amqsp936bJ/T5gyXnutRv0/L92HaU875VDZFeFdaZraOp/uVOURXdsG06wZ1kVUCgnr8CH7QdIDBq6YFhd2R2fxOQPCrf3tx7a+bj0LgGW8PjGhbxWN4ROUjEqBEGVNqZUg1CqPlndHPWin9uOndYC5iWZCNHNL9pz4D4UAVPB4qoynCiqVh45cvNAf/Hbk2jw5cSGJjuQRWyb3SkwdM3Ifx1BfaKWosuZE1z+UdRVikjtJBJ10a56mrrT3GHzW3nyZzdcQyH0T1AUiQlcqltkEAmIQ8IsIjlag9kNYyCpGCJ8UkhFnMcw7CNZEpohgUp0u5sc7bKjzPXyl2FKNGcRITrREmCKo8yuMAeIRysdy43VOe3VCwO1+mrCqRAjG5MLbhcTAWblmzNjkABux5Tn69Bu/2Zgq"
	,['bp 3 to 4']	= "0eNqVl9tuwjAMhl8F5bpMidPSwqtM08QhQpFKWqUpG0K8+9yVs9w2vqoI+LP9+5ByFpuyNbW3LojVWdht5Rqx+jyLxu7duuzOwqk2YiWO1ocWTxLh1ofuoP/FXItLIqzbmV+xUpeEYZk+WQLL8mTKsvp5MteXr0QYF2ywpo///8Pp27WHjfEY2R0R/No1deXDfGPKgOi6atCscp1fRM0hESd8pJcupDcMRGPkCEXHB6NGMGk0ZoySPcStSxsCnhFhfGQ9QlOIBVtcoDB5PEbfMInYWW+2/XdAQIuI9ORodssYge4IMjMluaWiMSoilKvCWLFXcRYUELiSy2nFlWbXUZHZPvq7xSn3e1/hc6Kx1FvSyW2VVG2o2yAoPxnfz7sMdzfWDXlZMFeHJDXJuQuIlrZgbyCas+RyyKxAMiqgJgo9WAFQbC+DZR7uJoDoGZXvI0pNE8RPk6aVoaApE0qXLePu/ZjQFtztQXYm5Jxrjdy2UDBnjQ6EPSIkRkvGPUamoxXzDlLTzanj7w+4RvbCTCkmt+FVBJPb7zDdqJrd/eTbhebeCzQl53YZjSmY9dQROi2ZfYeR4cu8DeaAJo9/J4ko12iGZ3oWqlmKB0fjm95vkQMUailzbP0/ABlArA=="
	,['bp 3 to 5']	= "0eNqVmGFv4jAMhv/KlM9lauykLfyVaTrBFk2RSlu16e4Q6n+/cD1gtzNt3k8VAT/Yxn7tcFaHenRd75ugdmfl39pmULuXsxr8R7OvL2fh1Dm1U5++D2M8yVSzP14O5k9sWE2Z8s27+6V2esoAS/vFkiDLk6vr9ucXc55eM+Wa4IN3s/9/Xpx+NOPx4Pro2Q0R+n0zdG0fNgdXh4ju2iGatc3leyNqw5k6xYedLi59w9Ddk672IcSz/wH0bGeEkRCc7ole8MSkY2gBY1MCyhcDKpI90QuUEqWI4VTJlHyBsk2m8DWiTL373r3NbxmBqfNkKIlQkqB4WbMUsCaYQyIHL276N8pCopqkrpt5+tkmEO9lP0YB6T/6Nj5XPOXI/atL7Ri6MSiJXCBkQsglWtvyT10lJFNfG15GbBMQN80QC4VyIE0sVoq55cw3D1JGGm1kXm9kIrSR5Qww3HI6wTmDUvN1lSGLzpoUaIFKRS6msYQGmBYZFTp7dEJ8SJOIoTE8McToGJ4RtF5nDA+MhOJlxlWZpnUZYINrchLX4txvaSgShJ8LUPjlMkAXLJmCtoqofbwFIxIpBpkhK9l/+BsbdITo9e3DEMiUw2dQHmhdtAw8PhKWVGNRaMIUNgU6k8Rbh0kaH9d1SNyGTIVMINkLtB9ER2wO9qboi9XAfij7QfBux49Wu8eqaBlsIrPemNaALSVn0KKbjXwzR+/VMgW9NUTKa6Z8cMdocv9vKFP1PprFM34K7ZONB5+uH+ZUViVRpbd5GYXqN0bKEyw="
	,['bp 3 to 6']	= "0eNqVltlugzAQRX8l8jOpvIT1V6qqIokVWSI2MiYtivj3DqVN0mgKnieUCXO4s1zDle2bXrfe2MCqKzMHZztWvV5ZZ062bqZYGFrNKnYxPvQQSZitz1NgvmOr2JgwY4/6k1ViTAiZ2UOmJGUOumncx0O6Gt8Spm0wwehZ//eP4d325732oOyGCL62Xet82O51EwDdug7SnJ2eC6gt3DrARY2TpCeMjMfIBYy6F9Q2JgSIITpe0hkhMcQuWslSPWk0hS9Qsohy+GI1ebQOtaCjiKYsDaeMqEYuViN4/Jr81APOYUfj9WH+T2JUQaVyVJykWgHHKKoV+N8SMwx63+oejO1P3sF1xWHPrUt+Tw9j2z4w7DFpjP9uGyvQ+jOiAXnEhHOiHfHJFIQmipUeuj7818SS6lm0j5LH2G0GwETWmygFUdfTYHYYU1IObLxORbUderTIHdV2OCYlHNl4PdT9x3VQNx6nFMSRi/WjSJbEl4lYXyPFiUy5rlMJ6kLgXyTktwKOUcR5AgW+3EzQZ0i5f4omrKkhDWJqE9wmg8BF+27uQpFLWYiS57AMXzLoj/c="
	,['bp 3 to 7']	= "0eNqVlttuwjAMhl8F5bqgHHp+lWmaCkQoUkmrNGWrUN997sqAIa+NrypS/PW3Y//Jle3rXrfOWM/KKzOHxnasfLuyzpxsVU9rfmg1K9nFON/DSsRsdZ4W5n9sFRsjZuxRf7FSjBEhMnuKlKTIQdd18/kUrsb3iGnrjTd61v/zY/iw/XmvHSi7I7yrbNc2zm/3uvaAbpsOwho7fRdQWxmxAR5qnCS9YGQ4Ri1g1COhtjbewxqiY5fMCIkh4mAlfEFIEp6PWMCkIfnwxXyyYCVL+5MHU5bSKQLSEYvZCB4sZKlPhKBicDWEto1nDkwyOxqnD/M7iVEVlcpRcTF1NHFMQh1N/jfFFIM+GrsHo3En18BzZeJfSxf9upmxbe8Z9pksZH7uHSfQ/HOiIfCAHS6o9oBujeSEKvKVIja9/6eKUgRU8dZBu2Q9eymploRujAwx+5sbhemKqaaA60qIGHxvU8pRhgvJqAaAmpzMqQaAYwrKWYYmpDhxFFEhSlCHD8dQu1iu26JSxGM2hEnt6hAmtcVfXCfGmCm1zfAbILnpcUxObRLAwFXZeH2GmMfdP2J1BXGwpja+2WSwcNGum0ubZ1LmouAZdNg3ZukJpA=="
	,['bp 3 to 8']	= "0eNqdl9tu2zAMhl+l4LVSWJR8yqsMw5C0QiHAkQ1Z7hYEefcpM9IUBmOTu0oih59IkT9FX+DYTW6IPiTYX8C/9WGE/Y8LjP4jHLrbWjoPDvbw6WOa8oqCcDjdFuZ/7AxcFfjw7v7AXl+VwLL5Zokiy7Pruv73N3Nz/anAheSTd7P//36cf4XpdHQxe/ZADJ1PKa8pGPoxG/ThtmOG7MxrqeCcv5TXmzsLBHIQehVhGIhilWAZBFwllF+EFA9hHPqYdkfXJeo8ZoylMBUfg3eMgncf3dv8rCKgNR+qV3xrRJkyFKJle1KsOKILNkaTh4QUVEuqiIxOI9svXAvPiGsJGfFZMVWT3pXiaqI5Faecvg4cSUYtlgvNeZT2lDtf/Ih9/twg6YXw1L299lMapgTUPq20cEl3sZDKiMwAakHUeiNoH57EjHxRGHoPCspp+fc8vZYMoFgdxbbkUHwp0HmqpIqjMWKxcBLxH8pZnhyjhlpJryjIGUF6Z+jt/Bot1CGZF4NiGT49weetxxihDBfxW4pphUw6MyVby8VSymRWKsmcQjZYI56YyHnANFLF0ZhWMJmQ8Vhp8ZN+WGm50xTpkITbhWilxY3bnc1aoZ+GwSylBUEOiFZ8IdCYWpjPTMnvgz65UzZ5vOAq6A7ZLK+Zl9S/NHnh08VxPoWmRmx0W9S5MP8Cfyr+Bw=="
	
	,['bp 4 to 1']	= "0eNqVktFqxCAQRX9lmWct6mY3qb9SSklaKYLRoJNtQ8i/d5KU3aVNi3n04j2ekRmhcb3povUIegT7GnwC/TRCsu++dnOGQ2dAw8VG7Clh4Ot2DtYbvICJgfVv5hO0nNiOprxrql3NwTgXPu7qx+mZgfFo0ZrVfzkML75vGxPJ7IrAWPvUhYi8MQ4J3YVEteDndwklGAyguZpmox8UdRPpnEWk7Fefi4fTipBbiGO2CFcLZpNS5IjIbxGxRTjt/JBNjXP+MPJvSpkxjPhvlipb42pB62LRtFS57T8DV1ONsuKA4SApuJiYlva5KpWq5KMoaTG+ACtJD6U="
	,['bp 4 to 2']	= "0eNqVk9FqgzAUhl+lnOs4Ymqr9VXKKLqFEYhJSI5dRXz3HXW0ZQslXkl+8n9+R5MRWt1L55VBqEdQH9YEqM8jBPVlGj1nODgJNVyVx54SBqbp5mDdkRUwMVDmU96gzie2oSmemmJTc5Ba2++n+n56ZyANKlRy9V8Ww8X0XSs9md0R6BsTnPWYtVIjoZ0NVLNmfi+hMto60ENMs9IfjEjG8BeU/WMepxUiZf81+NthReQxRJE+j1gwUcohRST/FeExwnHjB4lqlFt/TpRSJQzDX81ySta4W9CpUyg7qjyuEQPdUI2yYod2Jyi4Sh+W9rEqhajyEy/pYPwAn/MnRA=="
	,['bp 4 to 3']	= "0eNqVl29vgjAQxr+K6Wtc6BUQ+SrLsqA2pgkWUoobMX73HWP+Y6f0XhGr9+O56z3teRKbqtONM9aL4iTMtratKN5PojV7W1bDmu8bLQpxNM53uBIJWx6GhfEXy0ScI2HsTn+LQp4jRqS6iwRWZK+rqv66C1fnj0ho6403etT/+6H/tN1hox0quyK8K23b1M4vN7ryiG7qFsNqO7wXUUsViX54IH1nnN6O3yWDwAkUbrqayniPa/9x8Vt6ARIIFa5LjpjkUVdGQJNwKJBQKtmUDVXzSrNg6DV7grIKpsQvKHnAbsqXm7kO1gEvdMiY3avwWGmgqHwHyAAqsPsXyJxvPujQ0W7vanzOkKb6osuxYWzTeUG9Jglx7N/m4F4HFCDldrAk88+4LUyXke0EWk3OTYpWw/YDiYFwP9B2oA4ekFwoWSkARt/CTNvWnX/St6C45o1JtQnXrTKgkinfuvEEG1KCLNy68dS5pG6uV+iScq1CU9YByV0GCbIRFdck8XyFFNcjtDJgngIB145SbNs9bbmnl4Viu4We8FLOlEiegIo7JtFCuA1PUzhjEp0N91pAHTjdG68PGHL7uxKJqsQwXEsWvl4oXDhq147bm68AcrmOVyjhB4EsRdk="
	,['bp 4 to 4']	= "0eNqdltFugzAMRX9l8jOdkgCF8ivTNNE2qiLRBIXQDVX8+8zYytR5LN4TqlufXufaDlfYN71uvbEBqiuYg7MdVE9X6MzJ1s0UC0OroYKL8aHHSAK2Pk+B+RebDMYEjD3qN6jkmPwzU7EyB9007vVbejo+J6BtMMHoWf/Hh+HF9ue99qjshgi+tl3rfNjsdRMQ3boO05yd/hdRG5XAgI98nCTdYdSipG1MCBj7CZCP+YzIKEQarUSsCMni65ErmDyiHrFazjZayJqOgm2PojAlG5NSmB3XIuxeOBqvD/NXimBKwXbsjrqlqEtf9zgJ/uQdPtfFpoj9nC/Xh7YPQIEVA/wlOI6ccjuGtFpmXAxptcy5LSMivN5yvRaktoLZhzSljNlZtyGXJGPHPGzxd+sqwT15Uppib3aynZRiD5Jcut3YX5pdpfwxiuJmHFPpinOmp/Txc/c/rYW9/8m7SJWc65ncB4q7++k7nr3saYxkXM9kOali2oM68E3KBH3GlOXVMIGmxjSMZQ/BPWQYuGjfzcNdFkqVcicK9PYdbehrCw=="
	,['bp 4 to 5']	= "0eNqVmN1u4jAQhV+l8nVY+TcEXqWqVtBalaXgRI7TXYR49zWbpam6QzLnCmHwx/HMnBmHizi2o+9TiFnsLyK8dnEQ++eLGMJ7PLS3tXzuvdiLj5DyWFYqEQ+n28L0jY0V10qE+OZ/i726VsBO92Wnhnaefdt2v75sN9eXSviYQw5+0v/3zflnHE9Hn4qyT0ROhzj0Xcqbo29zQffdULZ18fa7BbUxlTiXF1fobyH51+kzexP4Dar5UE1CawJqYKV2XamdI9i3Ieey9j9O/XB3IIFwDIRcJNQMgl4kbOHYmPXYNHAWDaVtB2vT69qUhMVpSpya638sjknvqSuvj0hqjt0/I3Zj7scsKLIGyBIBG1bNTsRSuuvOUpYdTElmiIRyfPHpLLJyVM3WpZZyzHeHWVLToBhaDe4Hxei4uB84VMUptXtrkgygRpqlouKngTmgKF2agqIOkKQ0x6bQOSCl1YCPaFlw/dOBh+cB53SwGxjDwUikqWsKWzMasVFoJZJxNfigUPOcCPGROoNPNs3holYhu6BxgDr9/dALOUFHBp2SLUihz9jAZ3xYhY/TsQPNzRjdVqKmNOtOtwptH4wrqoWfNCxDKeuCdZ9S5F3BWrQ1kNd6izxb0IQarkHDaAIWNQgdpQZ48KGPh1Y/qcNJsKU5kqLAmNAUDd4haIoB41IoL5UI2Z/Klvmfj0q0h7KtrNmn3D25svDh0zB1jmardaN2clu63x9407JM"
	,['bp 4 to 6']	= "0eNqVmNtuo0AMhl+lmmtSzQkIeZVVtUraUTUSGRAM3UZR3n2dpZu0lQv+r1Ac5sN2fh/IWR3aKfRDTFntzio+d2lUu19nNcbXtG+vtnzqg9qptzjkiSyFSvvj1TDfsfHqUqiYXsK72plLAZysPp200MlTaNvuz6fj7vJUqJByzDHM/v/7cPqdpuMhDOTZDZGHfRr7bsibQ2gzoftupGNduj6XUBtbqBNdysvVpW8YK8e4BYwTY/QCxcudMQuYUoxZykwlpiz5UsP5dRxmexdM38acycb8zo/ljPAcorkhJpLY8Dp0dF2RjCNBfii3m3I/ZcWAjZY4pxedM0bAuCHYFBmLBGiQAB0qKN5BL4jRLKephOVkWU4Fc6gTqpc4hOf5O89Ra5FKP3iP5VdixRG3cEewAmqDdis2iRbTvWEZBpUW74pFMbw3Du1531RhOahHtSaQmi3R8WfWdWHhqtCC8GvUUwkUrgtJ+GhZCJhOo45qdr0wQG/XtyyudnZnQcFLQkanhYTpgfgNED88T9x6bTq4jKwAWuPri72nIKafMiDarP5PZXauuwYWp8Qzr/F9RsRFVi02YI9OG3ZmebROeF/wyhAlCZ4v7L7m4VLw683f12Cf5t+14BHCYxpkCWKTVGpQCPxLnwFbOU+xwI5O0dBLeszhSLff/3UoVLunB5PNP+TuoSLDWxjGublva2u3ptE11cRf/r2GXA=="
	,['bp 4 to 7']	= "0eNqVmOtu4jAQhV+l8u+w8i03XmVVraC1KkvBiRKnuwjx7utsoLBoaub8ijD48/FkznjMSey72Q2jD1FsT8K/9WES258nMfmPsOuWsXgcnNiKTz/GOY0UIuwOy8D6i40V50L48O7+iK06F8DM+m6mhmYeXdf1v++mm/NrIVyIPnq36v/34fgrzIe9G5OyL0Qcd2Ea+jFu9q6LCT30U5rWh2XdhNrYQhyXR6K/+9G9rd/ZReADVPOh+golMIaPMaS2ioBaNlRmpJV8aSqDqdiYXJxqNiWnpWFTbIbSsikmQ1ESTkvzPC0VnuyaQb1l+zR0PsY0SGTBj/JKpBiGw9BXhiEZt8yek/nHj7FPzyeGWfZ3qSn9HIc5CopcMtTJ/AYrzgZlfoM1g6HzMhoGQuVVtKhPSCVaMpSYrBKNp7P6P501RWWl86UcpRfGIOJ1nKPTwiVYkVEsEdusJPkg78tDPnxjIV0Bq8hbEJ56U9cAWOfVZ1ZpgFUUIh92E/kSjQQxkqQo9PCixWgQQ4sxeDm/q+bfZqJBGyCGFw3cDnGgFQolC62pYeexwtiArZtm7LgFmYwoWgk2hxymgqsBJ6RWgyZmNGeW01it5lGcs8xaUCNZIWyJnohkA2CRQ+VyZD+0yRWjRtsarBhkS28b1M40pkUaSTJspQRtRt8AFWgsmqKBhpTejQEz0jy/I5fIVcLk8+pi99dC+OgOaeD2v0ohul1ipjH7EvuXOg18unFaAU2tdaNaWaeq/hcbm9Fo"
	,['bp 4 to 8']	= "0eNqVltlugzAQRX8l8jOpvLGEX6mqiiRWZInYyJi0KOLfa0qaTVPH84QyxIfZ7oUz2baD6pw2ntRnonfW9KR+P5NeH0zTzjE/dorU5KSdH0IkI6Y5zoHlH2tJpoxos1ffpGZThjhZ3Z3kqJOjalv7dXdcTB8ZUcZrr9WS/++P8dMMx61yIbMrwrvG9J11fr1VrQ/ozvbhmDXzcwNqLTIyzpdpTukJw9MxMoIRt4K6VnsfYkAeb/mC4BBCpmfCIpnk6RgewRQpBbFoQWVyJrF6qmQKjVA2CeXQaDWMJicS2zeWvrex8TCeUBCPFyTQCgpuQPbaqd1yj0NUiaVSMLkcrUsGcgosB06nxIoTxlRYcdLHjhcQ9LbbQ/BOd3A2XF9o/nmS2Z9Ba9MNnkBGSVMc4aohcBqcIS2Bvl44zpEGAU6GC0QT2Yse2sH/10SZItsFH1qZUH2OdSV4MAUS8zQYCTFLrPTg1CrMeosL6FE1KZPZYKUJmqqgWKOAMQzz+gX7JrC6gBMRSMXCFIl4/cLVYPecvTZOUSA2i8cX62Kb4ZtVe3UMgdtHeEbaJjBDTK68XVUhcFKuXwBVyXnFNrQMffsBg8vhzw=="
	
	,['bp 5 to 1']	= "0eNqVlt1uwjAMhV9l8nVAcUqg9FWmaSoQTZFCWqWBrUJ996WUAZusNb5CuPjr8Tn54QI7dzJtsD5CdQG7b3wH1esFOvvhazfWYt8aqOBsQzyligBfH8fC9IuFhkGA9QfzBRUOgtGJT52K1dkb55rPp/ZieBNgfLTRmkn/9Uv/7k/HnQlJ2R0RQ+27tglxsTMuJnTbdKmt8eN7E2qhBPTpoxhGSX8wKhsjfygCDjaY/fRIEcwiXxpmQ1fZUJq5Ipia7SFSHq4fabbOxphqxKRLPSEUhdiwLSOVlBlKbjnKpf5t0JrgbbNl3f2ZNR0lN0mcF4qYMflTBPMqFXdtSCoQLDhrg8wUV8wQZIZdOseuiZazTnDN1JgTKWNPFFcoecBhyQ2SxmxzglS3IMk9riR3k9MnNjKPbJqicuaR/85TMEOnKdyDXc3fFUozmcmidN3aaI6p5fH/QYCrU1uq6ZfYvGAqnE3opiVbbpQqcSs3aaxvmZbMMw=="
	,['bp 5 to 2']	= "0eNqVl21vgjAQx7/K0te4tFcQ5assy4LamCZYSCluxPjddwyf4k7ovSKe3o//PbaexKbqTOOtC6I4CbutXSuKj5No7d6V1WALfWNEIY7Whw4tiXDlYTCMv1hk4pwI63bmRxTqnDA84cETWJ69qar6+8Fdnz8TYVywwZpR/9+H/st1h43xqOyGCL50bVP7sNiYKiC6qVt0q93wXkQtIBE9PjTSd9ab7fhdOgh8gkI0VF6ZBEXHS1OktCUBTaOhakJaFk2hkwYEcxnN1NGFyO8N0lQ2BLS9rKt8z+ZFruJrclGp5qFrNhTmQ1eS3dkw3z5KRWQUM3mNnUIAu69pjo4p7k0LkIw0gqGmEexZoKNht7+KqNa9/zvch37va3xOY59bK7nuXOuaLgjqLeyhkPMzodhDQaYVJHMVS5KimBRaCzCqcWn950zNVwM0c8PTWrnnBJ23jBExTAdcd+FVxNzRobXyZ0W9GpUJrexZIc9fWHOXO33DkFHn42X/ketPK+42p5Vwr0w0hXUk0PGkzHVOC8kY5wqtY8kcQFpHzhyNiIuFXjGZ/26leCW3wRwQcP+PkYiqRAjasrdQvwEajsa3o8cqB1iptcwxVb9xsS1/"
	,['bp 5 to 3']	= "0eNqVmNFu4yAQRX+l4tmpYADbya+sqlXSogrJwZaNuxtF/veSepN0q3HMfYpCzPEw3MsMOYtDM7qu9yGK3Vn41zYMYvfrLAb/HvbNZSyeOid24sP3cUwjhQj742VgfmJjxVQIH97cX7FTUwHM1N9mEjTz5Jqm/fNtup5eCuFC9NG7Of6vL6ffYTweXJ8iuyFivw9D1/Zxc3BNTOiuHdK0Nlzem1Cb9OgpfdjpEtIPDGVjHlF0NkU+oJj8JekZY1LC3nzvXuffDAO1N+iYMtu/9236XMHqH9jiun0+dGMUzFvK/NCJDb1koBW8xYZLa30XW9f4GNMYA3i217UziG0G4jFBSVQiPEZlRCKvkbDpUPmSX5ADB9UoNEO6Kt8QvKiIg1rYZYpNYwlzKCO6CrErXeP730o3u7ZjXPCrqmHDEpuFLexRlkMyx6Q3YbM7QgrInbpvyWqyiHDw4p4sHqEEFxE+k7Bp1PpJTBa1dw60RKG0fmYQYiBCRAA7hhfpFsXI9VNDS9SFku1iFNgM5YRGoKr5yDRQ9ti8a5NB+Ldvz3ZdvBp1RIYhNGoIue4HXYHHQc6e1nhPSUst5bLj9BatsBmNipGo/9hT1iikXvEIQvpSths0aMngKQa0Pb8cCxdJPa1XRYN6gtZ9ZiqQyaethitN1oJh1Wc0vRZWPXt1sPClm8cQimGvyxZVP09B1c9TLFCg+KSU4EHNx4FKm6fkXJnpvpqXQvjojunx+39PhWj26cVpzD7F9kmngQ/XD7Mp64qoVltZpaPkE9oIM4k="
	,['bp 5 to 4']	= "0eNqdmN1u4jAQhV+l8nVY+TcJvEpVVdBalaWQRInTXYR495qNIJQOyZxeRRj8+cx4jifmKHbV4Nsu1FFsjiK8NXUvNs9H0YePeludx+Kh9WIjPkMXhzSSiXq7Pw+Mv1g5ccpEqN/9P7FRpwyYaW9mamjmwVdV8/dmujm9ZMLXMcTgR/3/Pxxe62G/811SdkXEblv3bdPF1c5XMaHbpk/Tmvq8bkKtTCYO6WFPZ0l3GD0paasQYxr7CdB/3IhwFMJcEUPS3n10TXo+0qIvWrJLSpohtkMUBNjyQ1QzITpOiHI2xJyBuBJIEQU7lpsMvYfOv41faYJZokz3nWkJ5prNVCST0qkkG2rI4CmhCjeAoTZG6V+Ur/muL2cUs/qNTfRkk1A/AvNtIufy4GC3aZKTwxxaTwHkS/5I18xGwLbRjGqEfaOXfaMlkIKlynxYP1oBq6hplcVEa43a/l48BTX88hpTIsm2Z9HTQzL2i9Vp1KVPKFJYjrpZMYQVSAukE4a6RjL2EjYNmTIjGdHpKeuLZjaKARwVpZwtx2lQI0iGRoMWMJ072AfkoW+gyqcROXzec7qjKUA/0Wkq0aZGY9bwUcuJ0UrQm2q5Zq0CmeSmWrTyGe60BmQy2reFbUC+5FuHNicakyOXMvLtyRZowdJKStA9NGWNtB8yHoeWOH0TVGDDoSmcO7OajQYtYbNcws6CTHt/CLxkIkS/T4DpH5RMVNsESWPuKTZPNg18+q4fZ5SF1qVayyJ5/wsvZ8oc"
	,['bp 5 to 5']	= "0eNqdmVtu4zAMRbdS6Nsp9JadrQyKQdIahQHHNmy5M0GQvVep8+ikjM07X0HV6oQUyUtKPYhtPZZdXzVRrA+iem2bQax/HcRQvTeb+rQW910p1uKj6uOYVjLRbHanhekvVk4cM1E1b+VfsVbH7D93amjnvqzr9s+37eb4komyiVWsysn+rx/2v5txty37ZNkVEftNM3RtH1fbso4J3bVD2tY2p+9NqJXOxD59uOPJpDuM5mPUDMawMXKGYtmUOVscmzJ3MJ5NMRdKJt6qvnydfqUJZmAzLcm0BDPnB9BNULMMLfjQs/f2X6gnoEryqZakUqYqBVMNw9ZbXQxdXcWYFonCer4eKcUwcG3RHMuxRV1ssSTDoQVKm+IZpsh5S25FMCap69/7Nn3Ol/kpYGcBbcfYjVFQ4BytWNrFguGinnVRS8BFDbioFSogjFrXGoUyqlIbWJbUsn5qC1M1g+qAcF307t7aa/Sq5lHwOLVzkahUzQzDAyzTmszXHJ4lOMEqYPlT5GghYQ7ppVFImPUtfRbL0mhUXGkDDTr+6OVGZjjN44yTnKQzSLXIhWKZOVN4/qLPNKAYOgdzdKbkhKZAoaRtFuk2lrTOLquXVaj0StJYjWJonw2qfHI5s61FJ0kO1KFQ2mFW85hc/dE7qOSzAdV8Op45Lqp3auAZamDhXsIIjUMK54xVnH7gFNgPOMZqeGz+ZuvDsnYGwJr58D3+EguKMJlqDr3Xc07Vw5M661TRi75aLlgHX/TJhugKVI8YncxLVEw4UIXWPAeqcb0yjIh7g2sJi4s+iZF3Wo/e/jkn6UEmbVngjKfPMwnt0Ws/40bokTcA0q8gQQUgfQsKHu3Mo8nucbsKGq1e8sE0wM9dNAZ67SLfXwKa7rQhHiw9mhKAFzPaGzTBaQp62SApuQQp5Jnk6DPWj8fll0xUsdwlwO2fPZmoNwmS1txTbJ9cWvgo+2HakQetc1XIkOrsExV3rMw="
	,['bp 5 to 6']	= "0eNqdmd1u4jAQhV+l8nWo7PFveJVVtYI2qiKlCQqmuwjx7msWKG13SObsFapbf4w9M8fH7kGtu12zGds+q+VBtc9Dv1XLHwe1bV/7VXcay/tNo5bqvR3zroxUql+9nQbOf7Hw6liptn9pfqulOVbAzPBpJkEz903XDb8+TbfHp0o1fW5z25zj//vD/me/e1s3Y4nsA7ErM8bXcSifi3XT5QLfDNsycehP31xgC1upffnwhX8JZNjlzS6rU5DfwHSLbdO1OZexf4H06M/IcGQQVoIwV4TnEE6C0JNReAHCTBLCByGPq367GcZ8Z4fNxFIikCkNJCqJo6OJ6Gox5VMRvbRj83z+VWCYRouhTg41Yui13t1XKnFUklOdnGphquWSY9x/dLm9FU/b36kd4+UBmuuyOY68RRY0xUGa5BqRlXSJSWgT8wHWiJqwySSNtpr9WmmOgxoU6gRQQqVF0BNkUVFgE0EOxfDJ8HCHGsEaA6xREmqEqcSuOSFN5q4kiWeoYTmhecW3GhYXCRVyTsRnaV5hLUEOxrA+yqLaJagm63A/QoIjxXqAa4DisgFVI7b6bUQxfE6QJrIz1TOx6Br/mm/F7+Zz5mCjxm6tMyiG3VpHqM7p+XJ3FoXysTn0vOAx8LGjWUxA9ZbHRBTDLyqhOm3mZdrVuExrWKW9BhWW3Ucvr38tXb8nMDIJ08LSryUK7R0sVhqXRC+50F9a+FFwofRBwLsUlogXQRXU807cJ5ApqYIaVUSBqwoaFTb2JAkGeX1inX0g3OVKrszBomLJh+dQseQ3yuMXZomLCwF2cSIs/ggmwiZBuejJasF9lr1ns+5LV9Sg9xTc/KMBmSRgEig3AmWI6L2fzVOE/Rf/FutR7eMxkqNjYS+Fx75jxIjqAB9JQlWJx9TIkz27oIRaKZ6CWimeQiCF3ZRkwbc1wStYcmDXuvkOSx7ssLJnT5Vqc/NWptz+XVapblWmlTH/kIeHUAbem3F7/t4UiZKpdSzH0R+6xBfc"
	,['bp 5 to 7']	= "0eNqVme1u2jAUhm9l8u908rcdbmWqJtpGVSSaoGC6oYp7nxm0dN1Lct5fCBc/PV9+z4nzph42+2479UNRqzfVP47DTq1+vKld/zysN6e1cth2aqVe+6ns60qjhvXLaeH8i7ugjo3qh6fut1qZY0PsTJ92Wmrnodtsxl+ftrvjfaO6ofSl7872//1y+DnsXx66qVr2gSjTethtx6ncPXSbUtHbcVe3jcPp/1bUnWvUoX7E48mkLxgrx9gZjJNjzAzGizF6hhLElDlbopgyF5gkpsxlKdPJ9gjTXstuu+lLqWsgzd/DGREQwmgJw7wzoBnGCBh6HmElZuh5VxybYWyKF5hi5i2RV6x/xzTqqZ+6x/OfLIJGgV1uPsp09WL35OX7Yc0/7nkEbVloWIZaLT9ol0zY5UxYQquDnMpLt4UdwFGq4CDD0wKFbQlsA5AEKtLNSUK9no19bdnT8zTWz3ljXcVeBoFxX7b7ohA4s7JkBYXdsj1REAKniRAYIgRO0iDmK9JZRv1gMTrHqjK2xLNCJcinCyzUCaCR1ikDPU4sR0NMpsXYCJxsWapehnpNazGMnOen+i8uR0S1jMLDXHh+wMcOel41zVUy+uGGYvjAzIPYRXrgN8sS6RMvkSJ/M6nn2OWWdFkvF1vQrGrCQgmGHT0xxpIYvZzTwPYFGPvAnISA5W25TkJgpRiHke4MsKOGxGqvQNAD3SYEo01oWSEWQCPdJWAUo2EewWE+oyWK7+KgkUxuke4T2EW+TcjMk7SJM6+2w2Wxi5EYVLGniZRgnM9Mt5kv9Rol0WtJMYW2Juapwc/belP3kiHnY7uc7GRZEYTPA8kxZ89fQHSyEv1IDq+AUmA1ywsiGXn5cYKpKCVWfSTGMmfrgnV8wba04nlBRLIm5QWWbDbktOmWw5otcW0KSzM7Uo6wb56c5txyo8+BuHzAvkVSv7BviZ4x/a0R87bS5MyeOvyOoyXv/iCl1cyDILyubtlqxxRLnjxMcaQtOCietAVT2LcU2KNInlpMYd9MYI/YFxP/jYT3jepL91IB17fOjdqsK6SuhW9l/Jbqwms37c47crI2m1anOg3+AQLwLck="
	,['bp 5 to 8']	= "0eNqdmttu2zAMhl+l0LVT6HzIqwzFkLZGYcC1A8fpFhR59ynzunQZJfPvVVC3/kJS5E+J6rt47I/tfuqGWWzfRfc0Dgex/fYuDt3LsOsvz+bTvhVb8dZN8zE/acSwe708WP5i48S5Ed3w3P4UW3VugDfjpzc19Oap7fvxx6fXzfmhEe0wd3PXLvb//uH0fTi+PrZTtuwvYp52w2E/TvPmse3njN6Ph/zaOFy+N6M2rhGn/BHPF5NuMBrGBApj+BhTscbyMbaCcTCGdMrDTpGYwMeoilORj9EVTIIxpFNKXlN433fznB/+T5D3taRR/ByuBUbxc1jWMIbhkao7xM/f2hIpBxelIzmes0b2wyVPMgKHYe6rdkQOQ9ftSHAVkRzNyltV9UfDeeuysD93U/u0/EpTUDiLads4WSyrodb8LDake5aCOrQ0ODG7Jvgxt83pZRrzZx3rM/ZPMx6P8/44Cwoc4Aq0ZCgjzDEkJ8EdjbTHSJhj/l0GT1EV3Cg5VA0s7gfX3nAZa20M3BE51ltYrzhUh8REXWOyHgWklD7iwCMHVC3JEjAR1UdOPBOilmRJWYmqpV23yyoUatbV0mpcLc11hbuhsMDW4NxinZa/hV9QtHJRXcniOy3FoOIHB83IiQBrt2bYGmGqYtiaoB2fIg9xElZQmqO+oJmakfdOf0EyWWCDSh3tuEXETZMIpN+oa3qsNgXnUYGjXeScTnTdxYirF8/FhAoWQ1q8RKEMDfDwLEmtdxsPT5YkAwrPmSQ52LH41vLW5fUy9o51/F7MvGccd7xHFZEsGh/QDS9nuSNqG70yCddUyanGIEFNJc0L6MlfrvfKoDlzp2UdOFkSkO2YrOd2JZ7oqIsTCXRGQKZ3QFsLvdIBpNC2IM3FUnGy6zoTEqq0ZCOMEsWQ57So0A2lXs/pqFEobRvcPji2WdaEdLHqtoCpMogOlVKOlR4VfTpJAq7PBp/JxIjv2Q2nDcQEtgFGaJOEN8mcY3VCZwDkgiUNairHYfzAz3IY2ZWZemqVv8SBG2jGFCl5VDnJSVKCD/iMSVKCrw05UPgyhgFVUuLa4hh5peQXJgA8MHpnwwoDevqn79ykBa4zLY1woALZde1Q0gNH9oJrAazhgnv45syVNmfljqMkfONeuCyH52EFjkJuQOnLWKWB0VIBgaZ5wRsLnsgKGDTVC055sNsWMAHEFJyKYJ34W3l6aEQ3t68ZcP2nqkb0uwzJz9zdPN7F/OCtnQ7LGzFoHVWSIW9GfgFVynGd"
	
	,['bp 6 to 1']	= "0eNqVlV1ugzAQhK8S7TNEtvkNV6mqChKrsuQYZExahLh7l1KStNom9hNiYT52Zm08QaMH2VllHFQTqGNreqheJujVu6n1UnNjJ6GCi7JuwEoEpj4vhfWNOIc5AmVO8hMqPkcBSn6nFEHKUWrdftzJk/k1Ammcckqu/X/fjG9mODfSYmdXhLO16bvWuriR2iG6a3uUtWb5LqLiJIJxuSD9pKw8rs/SpcE/UOEPFSQ0J6DJzWynlXNY+xfH99lvoCCAabB18RyaeUPZ5pyg5P6tce8AC58A2T7bvBKIMjgy/jyyQyiUUa1xFpwZJzk8dII0RnikvYVNG0pCcyFHxtPQzUhjMq/t92OIjiQPWYA0oggdMm2mDJwxTfFfuA+CFcwjFf4oFOG/Yq+Z4KmgnDyj5HbMRaBrlGEt37l2x7FwkbZf/ydlIUTJD6xA8Rehellq"
	,['bp 6 to 2']	= "0eNqVlt1ugzAMhV+lyjWdEvNbXmWaJtpGVSQaUAjdUNV3nxmj7SqXxlcIgz987IPhLLZ1r1tnrBflWZhdYztRvp9FZw62qseYH1otSnEyzvcYiYStjmNgumOdiUskjN3rb1GqS8TIhLtMYGUOuq6br7v0+PIRCW298UZP9f+eDJ+2P261w8quCO8q27WN8+utrj2i26bDtMaOz0XUGiIx4CFG+t44vZuuJWOBD1AIhyoSmhHQOBh6ZRKUJJgCC5T01vi2Nt5j7Gm/5Fv6XxwQwIw9BnjdsTwcGpNQarYFG6pey98EQ+XMJChKsn1Hc1TIeHGuc9MoBnCNRpfCdj2NSQIUqWVBaXAl9Nwph6qM6yb52kyK7Xu6Zzen97hM3cE1eFz202N10bywjW17L6incK1P1goyYL6zYSVJUAy1sCy26f0TtQBMO9NqY6YVacUJ1ybkpwBS7uqmMVnQJ+VvhOQbCjlnbdGIgrtBaTFcU5OUWDJXKE1RjNVHNiXmmhbrwL8u4/URU26/kZGoK0zDWLbyzQowcNKum5ZjkQMUaiNzLOEHLIl45A=="
	,['bp 6 to 3']	= "0eNqVlmFvgjAQhv/K0s+40Csg8leWZUFtTBNsSSluxPjfd4wxnTmx94l4eo/39l5fexbbptetNzaI6izMztlOVG9n0ZmDrZuxFoZWi0qcjA89VhJh6+NYmD6xKsQlEcbu9Zeo5CVhdKqbTmB1Drpp3OdNu7q8J0LbYILR0/w/L4YP2x+32uNkf4jga9u1zofVVjcB0a3rsM3Z8XsRtYJEDPhQSN8br3fTe9k44B0UoqHpzCQoKn40SY5WENAsGgoLo+XRFLlAKeIFqgkj/wsEArpmQ+H5Qku2S+D5KjZX97aNCQFrD3Hpa/5cuky5vpPUWqRkG4/mQIxAVDafGMVQXL/So2Rcw9KYPEKRXBYUb3ra85STJNv0tLySi0kjTHm1eY+Z7A/e4XPZT/fYZM59Y9s+CCpxudYnDwBkxH5nw6YkARhqYVms68MjtYppZ1ptxrQirTjnmob8L4CCG7E0Zh0Vqr8rJH+hUHJii0ZsuAlKXwC4pqYpkhmhNAUY0UceiuKaFufAy5sJ+ogt19toIpoa27BWvAT3orBw0r6bwrFcA5Ryk65xhG96nJCD"
	,['bp 6 to 4']	= "0eNqVmOtu4jAQhV+l8u+w8i03XqVaraC1KkvBiRKnXYR49x02YulW02TOL4RhPmZO5oxtLurYzWEYY8pqf1HxpU+T2j9f1BTf0qG7reXzENRevccxz7RSqHQ43RaWb+wqdS1UTK/ht9qbawFE+k+RFoo8h67rPz6Fu+vPQoWUY45hyf/vm/OvNJ+OYaTM/iHyeEjT0I95dwxdJvTQTxTWp9vvEmpnC3Wml/J6S+kLxsoxbgXjxBi9QvHyZMwKpnyoO3QxZ1pjRPlRLgjPISoJwtwRjkPUsLIsppFkoleLaQUIvVqL0eJi7B1TqNc4hpflI89BDQr1Aqi8oQ0LtRzUwc/SsjJ6mGNYTgmb3/xfZcVRH00/0xAa38aeXje4JNd9tvVzHuasOHING1uSb4MOHQm0BUTQgAZWI+oahGzQlhfoYC1qTgnUoVC77XjrAWEhXWGXsWa1FWp6sz2RbI17VT+Kjum7mlFPaUGuLd75klydRrZG9tk4dAsSNLlDnaO3e9w50OKCx+K8QL6FRgcdQd0l2ufsHulgu7AnFlcjJzge0aC7Fl9QC1qKpXgN70tO4CGPGoBVyqMtb7fbyTt4rIsKho9g/E0F3ht4TIVcVdjDva+RKcgj4Ebni0Ebnb+8oVcNnmIkw21NlBK9SFAedGWPOZwo5PEfRKG6A4XRWvWU+ydPC+9hnJa+b2prG9Pqmjz/B/Z6ivw="
	,['bp 6 to 5']	= "0eNqdmd2O2jAQhV9l5euk8r8dXqVaVbAbrSKFJEqcbRHi3WsKlBUdkjm9QnjXn8f2meOxOYpdO9fD2HRJbI6ieeu7SWy+H8XUfHTb9tyWDkMtNuKzGdOcWwrRbffnhst/lF6cCtF07/UvsVGnAujpvvTUUM9D3bb9zy/dzem1EHWXmtTUl/j/fDn86Ob9rh5zZH8Radx209CPqdzVbcrooZ9yt747j5tRshAHsSn96RzRA0WzKXqBYtgUtUCxbIpdoDg2xSxQPJtSXoNxee/em7F+u/xNE9AAQy0VW+RjNBmbJaAVDLXrUCX5VMMOVd2lP+dkGT/GPn+ucB+jLW4Z2XTDnAQ1jEYzzFG7pfjJUSpyDTxFvSfLNLRNSrnxX5785hZ0pByatjTGM0LRy5EEBkLdEPQyRwbCLCMqQFf2LqurkPo5PVGSlnDiG9KsFczR6+mkNZz6Zl2g2nAEek3OrA4GkSX5a4SKRXRwamoG1aO+wYEGxPPUfZvWxRkBskTAFVpbaLK2kCiGzB2jULNj7IrRwNohm2IMWgvRaweXVIzMNnCFxVlJj0LpXYZLLLletpkI265iUOGKixGqlXhp9Ihdr4zs/xRgCh9Gw/as1pVm4XpMkpcVzml0q79ogsONV50Yy+ZRp1NkeMiJo5eV9NzobIRHea6khWEq1F7INXESxDBS1inQo0kxOY06PT1Bg1odee44i2LoaBxqkTTGo7dQRtXsAu6B6tkd9LlwHedaU96uRvRmVHjpyPEZL2H/Upzax6OVGrnpHn3ZYhwd3sDlnuYspAVdhROqA/2AlI738I2YpRwkd8zjOi4oBy7UyNcIX6EYshYN8OOXYTwhKtQS6dg0Gptd11wwaGwcqEXLNXrC8FWflEbwsOdZRkKEAFoePccIWh5HbxXwMke/VkvQici5RQV6JGNuUcM2xNnMCKcB+QtEtMjJTz5oRge+RNGBeDR1aEwALkz0dFB903FUYK6RlEoCj97kbCpU0TmO10I0qd7nLvffOAvRbnO33OZfUv/icsNnPU4XQ41B66gqGfLx/hv1uKnv"
	,['bp 6 to 6']	= "0eNqdmOtu4jAQhV+l8u+w8p2EV6mqClqrshSSKHG6ixDvXrPcunRI5uwvVBd/HI/njMfei009hq6PTRKrvYhvbTOI1fNeDPGjWdfHsbTrgliJz9inMY8UollvjwOnbyy8OBQiNu/hj1ipQ/GfMzU0cxfquv39bbo5vBQiNCmmGE76//6xe23G7Sb0WdkVkfp1M3RtnxabUKeM7tohT2ub4+9m1CJ/dZc/3OEo6Q6j2ZgpimFT5ATFsilmguLYFD1B8WyKnaAs+Zt0xpicAu+xD2+n/1kCWvKhhoR6AlrBUDuvVEk+VZNUSqq6pf7Q1TGlPPiTJ3+5C5FiaA5DXRiGZBjUOzTGMqSo6dU41H+0Es9QYqaV3DJ+zIWs/+jb/Dnt4mN2nstjO6ZuTIIClwBYI+AKdToZOy1hq6t/U11TVAVTNYPKSv7z7uTMYxANbHRNRtHCpxonig7InYu+e+41lWLzIJO0R35G3bZrNkf1Eq00dHRLtEzQmArFKLJnkEC41MymPI6dUWg/oOePIKPRVoUDNSiUjivnPDkvVXLMbRxaIWldcEtFZp+BeypaTYliJImB+yY5H3ArUSi5RAtfEcglWo3Wds4SDecIOuF+nECUeazFi+9dNfGMamIdWIk5sfBgPeUwkT5MXqMxv/4SrFEcrRXcMz7cuYeHs5Ng9SG94BRIUfOZ6zTqdsZZ4gxa3shi6+B+jKPN4Vb91so/3mLURxytaOfFYZYgk7xwuAp2OCeIXsJm1Bysgq9vLCznJqPPN1YyjN6AjiZ94i1IobU41G3005VH3kfIa7xH054Wgt43aEoFvI+Qq1lK8NCi3/LQiwRN0cAbC70aNGOzjpdCxBS2ecrtcbwQ9TpPy2P+KbVPPg98hn44la1yqXWpKrnM6f4FQte98g=="
	,['bp 6 to 7']	= "0eNqVmetuozAQhV+l8m+ywuMb5FWqapW0qEIigMB0N4ry7utsroomMOdXVFp/mbFnzhncg9o2U9UPdRvV+qDqz64d1fr9oMb6u900p2dx31dqrX7qIU7pSabaze704PwXK6+Omarbr+qvWutjBqwMDysJWrmvmqb787DcHD8yVbWxjnV1jv//D/vf7bTbVkOK7IaIw6Yd+26Iq23VxITuuzEt69rT9ybUijK1Tx/ueArpCUNyjJ7BGDFmjmLFlHyG4sQUM0PxYsrc9gYxxc5QCvkhXTAmVdJXPVSf599ZBlrCULsM1bmcaliq56j3Yh/7po4xPWTK/Je7Js8xCG4Yy3LupT6lVh2+hy59LvTM6TguCtBNsZ+i4shWkmV+zZKPzqEtxG+WR/uZxwRBRno+oUKAMPOIEjgxAxwY5QCYELBGZYPdfiJJQdnr5unl9iYDtzexkVmYo1mOg0WMBFl6WCr0sohRgK2Wz7mAOU85E0dFmuSaNUmK2eSoJLElYzQqSTyGUIxe3jxj0BQlUItOILRchAYejiRQj0LZwjYSt7ikmlxQsIMFKqN8XCWKYSvPAqPRWZEFgmw1Cs0FUEK0wHBYuglD3b7QBQt7iaBprEUNIRdAYZeRROol5nwdjnK2omBHYevbFqjd8RjEQfLb3i/6h0OmLD1fjDPfgtqLwPEdgbYgYRpQawX17VCnkcSJGo2E6UEhZrvGoe/kksgKVIYFY6grUahZPmufo1omgWpUygX3E57QSFnb9QY3s+eZR6Af3uLXAg/j80uX9A6fy0VcyH7Y10sfYMF/ubGv4yxAXRbMqx53KiPY0pCDobK7GjR8WyE570DwXYUIayQz+1wVBQvKMdvlwYEUPhaP6phdFscQ0PGKvcUK8Gs/fyFdIpeMbCQFWuf8nbYGhyOeQsANI58NOlDxcaAjFE9xwGUnnw06IqU4PjJVx2qXltz/c5apZpOWpWf+LXZvIT34qYbxLKlFICp0mYfUiv8AvKgb4A=="
	,['bp 6 to 8']	= "0eNqVmd1u4yAQhV+l4tpZ8Q/Oq6yqVdJaFZJrWw7ubhTl3Zess00VTcmcq6i0fD0MM4eBnMS+X7ppTkMW25NIL+NwENufJ3FIb8Ouv4zl49SJrfhIc17KSCOG3ftlYP2LjRfnRqThtfsjturcADPjl5kamnns+n78/WW6OT83ohtyyqlb9f/74fhrWN733VyUfSLyvBsO0zjnzb7rc0FP46FMG4fL/y2ojWnEsXz480XSHUbzMaqCMXyMrmAsG1MT49gUWaF4NqUW38Cm1OIS2RRbobRwylgKo+Qte6c+5VwGiW3+4VaGIxmKw1D/GbQOzWHIug7DYKg64pa0S6nd+W0ey2c9bW0p9KsjjEueliwosAPAEgF7xqJ1PfaBgTD1uMFJTSsBsvoqp1izeE1z97L+TlO2KPlUy6fipq1J09ZQBRqSgVs2rcXCJ4hhRMrBVFqdR08UjriAHjAcaMRtRN+qPQ3fFLtucRfhcI1Ez0dyg4xCD0hGnRmNQu82yFJQg1geWXPGopZHx8yhlidJjIedU5GcgHqlZEQ7wgasGFS8BbqjeqprhRoici+sgt2Y3AuL9/M0xyC9Fb0ktJmnKY4h5LPHo9cCd/LqscXYAELp1UXQqCQjG1vUZMioOYm6A+lVTqEYWo1GC5dxTDiDegwHalEow7ccchW4BkBxrgLOo35B73JA7YvGRORWSCcK3u6wAuU5Hr/yitE/rlKvQHfUDKYG1g4kiTcAVwNcC7ofJwYO9GUO04OOymEG1BfJjtJH3BgMo7v3SBldfeyuh/aMDAgStXXyDSAoRK2qq/02JkGjJmcf50EwqAFzoBY2QctIiuBAzzIMqegFnU6AADsfpwpChI2PhW2B9zdyvVGCjkSaR1QghdYCXznoJ27oxkG+KEb0xkELQb8+oCkeeFimV4PeMGgd6A2DprTA2we5mhbN2KLjuREpd+9lyu0rvUb0uzKtjPmnPD7FMvDRzYfVX2LQOqpWhtJd/gU280xi"
	
	,['bp 7 to 1']	= "0eNqVlt1ugzAMhV+l8jWtEvNbXqWaJtpGUyQaUEi7oYp3Xxjt2k1WZV8hDP44jo9DrrBvz6b31gWor2APnRug3l1hsB+uaedYGHsDNVysD+cYScA1pzmwvLEuYUrAuqP5glpPiSBTP2WiKHM0bdt9PqWn01sCxgUbrFn0/9yM7+582hsflf0igm/c0Hc+rPemDRHdd0NM69z83YhaYwJjvGTTLOkfBsWYlMKkfIy+YxI4Wm8OyzMkoBkbqtjMnM3k6yzYTCSZGcEsxX3RVF8qcV9IzPbh1761IcQYAdjkCwIphFYMxl3DJv+7QgUF1AzgzRiKBURpHzUDmkqhyIDyJyPlK82lllNknwuJV0i36VI4pIpRXSVk0sq2woUnlwiVkEJqQcEfYMGQOzcip1946xc52ije/WklmdSANCbnFKReFlQIzUILKYX/L5pScfbNl9VITUtSUqlp6XOCFm6HkRIPQjaYU0x5nOwSaJuYFmPlKnQrHQMX44dl/KsSsdJbVcZCvgGJx1UU"
	,['bp 7 to 2']	= "0eNqVltuOwiAQhl/FcF0NDD3ZV9lsNh6IIanQUOpuY3z3RWvVdUfLXDVS5+P/5wA9snXdqcZp41l1ZHpjTcuqjyNr9c6s6vOa7xvFKnbQzndhJWFmtT8vDP+YF+yUMG226odV4pQQIuEhEkiRvapr+/0QLk+fCVPGa6/VoP/yo/8y3X6tXFB2Q3i3Mm1jnZ+vVe0DurFtCLPmvG9AzWXC+vMj0Lfaqc3w7iLwCQo3aBdkuJ2z4fkKCzg2Gb1q03SeIbvIaOl83AKhpPEJEG8wGcGymHBsO//Ccn4veFNr78PaP/o1n7DIpgtVkKsPmPkyHjOq+6stR6DLCK9zscgGoMB0CR7D4CMD9SZEBIO/lwHR+RFoerDSCRnfC/y5F7B8i/hJkKPZaWhGhT5ZTzFoTu03jpaF3P08oiwlFYq3zJJ4uKEOgVMPNxwjiGJQSwBUMTgm/tiHK2X6vkqJA4qnidrrfHp+ICcy8ZwROj29YNA7DsqY41Rez0L0NIUldXRRJZJTpwzHCModgxqSQJwNXIikzgaOSQl3FW4nI04XTsmJFNxNQZzKQAlfu9qrfQi5f74nrF6FsLBWzLydQVg4KNcOM1cWAKVY8iIY+QXkqfXY"
	,['bp 7 to 3']	= "0eNqVl9tuwjAMhl9lynVBOfT8KtM0FYhQpJJUacpWId59hnIaMiW+qnDx19/Jb6c9sFU76M4bG1h9YGbtbM/qzwPrzdY27SkWxk6zmu2NDwNEEmab3Skw/WNRsGPCjN3oX1aLY0LIVA+ZkpQ56rZ1Pw/p6viVMG2DCUZP+s8/xm877Fbag7IbIvjG9p3zYbHSbQB053pIc/b0XEAt0oSNcAFFbGO8Xk/3zgKfoJIMVf+hKQJV8VCFQnMEmt5XsGtNCBB7iRPL7H3pWbxKGa0yj4eKaGgRUzpfZtddRxBltK6bLIRSRVP4DEXwiHrEbDkivhnknBKy/TmKIRuev7enSMmtKSKod9cPMHf81ju4zlv0WWxynW3GdkNg2FPobSDQhY1y/mWHeUzTizKCeG0lfLPJTYCWJjm1I3FMfCMo1CTYvJGSCEUXSiqC1eS809wQXlhNptRJgK9jRu02HJNTMeh4kwV1oOBqyqj2ubgdV1JRzh4UoahOR2tRgth2OEUSjh68GvKsR08eRZ7uOCajDlock1PfhXBMQdxpnFISdxqnVMS5ABR4ATdB7yDl/kWRsLaBNIgVH8F9KAjste+n2VkWUpai4gVY5Q9KZyYZ"
	,['bp 7 to 4']	= "0eNqVmNFu2zAMRX+l0LMzSJRsx/mVoRiSVigEOLZhy92CwP8+ZXabbmNs3qeganV0RfGSTK/qVI++60MT1eGqwkvbDOrw/aqG8NYc69tavHReHdR76OOYVjLVHM+3hfkvdqWaMhWaV/9LHcyUATvdl50E7bz4um5/ftlup+dM+SaGGPys/88Plx/NeD75Pin7RMT+2Axd28fdydcxobt2SNva5nZuQu1cpi7pwyb6a+j9y/w7dxP4D5TkUJqhbmIw9hMzptv0b32bPh+BLKuuyD5C1o6xG6NijnH3KHZ1iDGt/Y833/KPAxhELr6wXrlvIQ+bWcGUgvvo1evsxULWdFTA89HG64XmweMZLdb6IEM4KO4K+ptKHJVgqhFQrSR9l7unLBYQHeI74pUKXi5HjjH3MG8a2hQAWSPgEjUGccYwcn8Rm11szlYo1HDaSAOxMxtv/ziSZIBjLPBEBJtMs2GwKIaPpkM7od72J+UolNdW4P4z07avqYTdJ8LuwR4riWSFdlwB1GpBQV4eW1KOrQGLjkQjgUxBI7IW7MQSptw/jmNyw6nNUWuzRdwWor67zFnsmGUlk9qOFgSvYo8Mr7yKSoLQayqcBkZOVoQzAoJZ1UAS261qsHBPIkHhcmgO03YOuxxkCr60uQL1BTv1uxLtTjxGXu6X4ZbHVGDXYCm5RvsEjzHgiMZT0NrNUyyYQW57BM0d2AGSsudMhejPacv9/y2Zqo9pW1orn2L75NLCu++H+dx9SbQ3lS5TFfgN6yLZ7w=="
	,['bp 7 to 5']	= "0eNqVmd1u2zAMhV+l0LUT6F92XqUohrQ1CgOuHThKt6DIu09Z1qbrTmyeq6BK9ZmkyEPKeVeP/aHdTd2Q1eZddU/jsFeb+3e1716GbX9ey8ddqzbqrZvyoaxUati+nhcu/7FK6lSpbnhuf6mNOVXEzvBlp6V2Htu+H39+2e5OD5Vqh9zlrr3Y/+eP44/h8PrYTsWyT0SetsN+N0559dj2uaB3475sG4fzcwtqFSp1PH8U+nM3tU+X7/zZwG9QK4d6CI0A6uRQe4HGE8B4OcbNYAKNCQgTaacgJokxesanWm6MmcE0NAb6ZPQ1u3d9l3NZ/N+ddZhDyLN7ziHD57ODHEcXm/u3LiyiXjP6UIp+epnG8rnA9d+KuPpQlm7YHbJCjwmC41i59ecDECPSVYMDmeiywZxa4pOZ94lPd2iLFaX7BWDXAr20hsgLfU2Lv4kwHvKNTLCWrSoYOCuvBguTFjrNFIOBNRYlIZDLv5PbHgnb3dX2ZWsTAfYLQbkpEFbePrC4wZg0tGRalGxOMyLpP0h0YjhDtwqzLPHOSnTKrmcjwM9PBnL4AQpzAnMiZuFEbmali7Q8G8EsmnhtNSeBtTUrrVZgbMMKrV1OSS9pV5+dE2aAN7zeSYLoLSvOEn/l5YPVA92TvGehRgANrA5DvfCRxeBDTvx0am4Np7d119es7mpobcNioNNBs1oraALBsMIrgVrikgVDFhwrsIIcDp5vDloyCoVAC7cRcSOpsThvkuA07OxpsA0E29GQuqSXjzRqkilow9GQSg+9jZZUOhj56EgKtsWz864ThD6wUEHvipGVSnjtjYl5rQA7VayZ6Rhb0ZAv0AQTQ9KsMEqghhdGJ5iZkqV1UYRl7/jwgJMnRQ1TAiGuMEtSJCVMcqCJlDAJk72J43jRsxB8B1trVnzCsoc1/bOFX1a02jJSBN9p1fQlG2PoOzYOfWBeb2JElCD0bEwSMWJiI2riroltaIjahzY0mqxTaEdDz/D4FxbLphnGOLLrYYpn+xzGBLJVYEokWwWmsKJcKA+V6nL7WrZcfziuVL8t28pausvjXSgLb+20v8yzdbK2No1ORX1/A+y/F+Q="
	,['bp 7 to 6']	= "0eNqdmdtu2zAMhl+l0LUz6Cw7rzIUQ9IahQDHNhy5WxDk3acspyJjIv69CqJGn0mK/Gmqe7Hu5nacYp/Eci/i29BvxfLnXmzjR7/qjmtpN7ZiKT7jlOa8Uol+tTkunH6xCOJQidi/t3/EUh0qYKf/slNDO3dt1w2/v2w3h9dKtH2KKbYn+/992f3q5826nbJlV0SaVv12HKa0WLddyuhx2OZtQ398bkYtTCV2+cNl+nuc2rfT3+zRwDuo5kM1CfUE1NycHbuYUl77Hyd/uAuQQFgGQj0lOAbBPCV4fmzOGFMOeIChtgyt+VBLWqoJaANDbTk1lISzmEO91cacq2n6mIb8WeDeh6C6lGzsxzkJ6jGak9jXtLRUUimDmKpvpp6NG+b0yDqLkBVCdgBZ3k6tDPY4+OGxPXkMv+iuYaEwNYqhM6BhZJF+mkRaAnFDckgjhWQQML/R2GeOGxRDnqS2sAorRi91MFUzqB7WYU36HGDl1WXl1fU3lPculp6TP3g3YpyYkfDrDyMmRkFtQlGnZYAXM0VaRrV0Y3C9VYdyYzRI61GFJHj8FIfqLyck/PKSfCi/1gwfym8/mg9tUEtVuQCs5HS4Ey6PAQygQmWflEALNyGOs6xpx56rXZZFyVpUqGX5nK1DoaQsWbgZMVTYBvyVmKNKtkY1lPa5QTGSnEfhXkNjFKhXNEWDUirLheAMyFTltHUW9JZRsM6Bksfx3YNMMtNcABWeE8Ea1DzasgakkFnnJaoejPdjr1Ao4+7Da1QuyTnDs3rDZdYje5b/xlSvGeLoHSpHtIceueujEeh0TsepBpWCpjTAvSPpTcBHc85xBXwwZ2E1cEtK+4tO5GTcg0WzkbweCA5t1TTGgxlJUwKYkTSlBjsLTWnAzkJSagmedaa8ViKmdpO33P5LU4lulbfltfCShhefFz7baXvqrnXQulaNDDlR/gL5vJP5"
	,['bp 7 to 7']	= "0eNqdmduO2jAQhl9l5etQ+WyHV6lWFexGq0ghiYKzLUK8e005bekkmb9XCIO/zIzHv8eTo9g2Y9UPdZvE+ijqt67di/X3o9jXH+2mOY+lQ1+JtfishzTmkUK0m9154PKPVRCnQtTte/VLrNWp+M+ZGpp5qJqm+/llujm9FqJqU53q6mL/ny+HH+2421ZDtuyOSMOm3ffdkFbbqkkZ3Xf7PK1rz8/NqJUtxOH8kenv9VC9XX6zZwOfoBqGumWo4UMNCfUE1D4i2Dd1SnnsX5z+5m6uEwjHt0vd7CIwno/RM5jAcUjOOhTZlsz5U7IpcoaiJMMfNeuO4qe4mbOEn9Rz66MMwyEz75BlW2LnLAES92qOWd6l6pHHY5ag4WPo8ucCVz9xi5vO1W0/JkE9JsASY5bVQEVYYwwZ2hLmaIqjOdm/uqc/aYtWyILox4Jcl6Ab08QaaI2QFUI2qATR4bMoho6gQ6WMxngUQzsVUDnTy4mvIypuHGgJ5Id5bNLF9DASAGsErFBlJVfaaBRDrrQxsECrv1dFU1SLUiVpnIMlTpEcj1RgtCkB0SFLR2r5yDERPXLk8h4xJVw9MtbYSriY5FAVKKeSwdSgKHKYBhVaMjOtBdJKLWTVtOZYB+o5JwKcTXVd+HwXYADhQ4cOaUSFkcaUIIaUDSdRBSONcQrFkGLv4DszbY1BMbQ1FhUQRj3g4JsyBwrfm+m4BbyWfdrsnrHZXQSliROBEpRlBtNLWPsmozF5oHrkZiLvD1kMskdv6ooREAMKIIdp4fr4y+1pOqwOro5ZWA+KLicCAWSSYuUjWtHa5RPPl3gfw0y1MaZzNUhUr8kbR4APIUY3JMBHEqM1HAxS75P9r2DxjoZhZHhw+BnA4nqkJ0u7HECNp7MkwoLL8q8EerR0x5nT57rlBOlaVEBblbYBvbTTdsBvKcjebLTo1mMU8dGhpRJtm0fLOBqDpjRNQQsqmlKCpzv9xkOCdQdNQXtQmfJaiDpVuzzl8dKyEM0mT8tj4SV1LyEPfFbD/qL2MWgdVSlDPlB/Aw/Ome4="
	,['bp 7 to 8']	= "0eNqdmt1O4zAQhV9l5etQ+d9OX2WFVgUiFKkkVZqyW6G++7pbCoidJOf0qiLFX2bG9pkZu2/qYXtodkPbjWr9ptrHvtur9c83tW+fu832/Gw87hq1Vq/tMB7Kk0p1m5fzg8t/3CV1qlTbPTV/1NqcKmJk/jLSUiOPzXbb//4y3J3uK9V0Yzu2zcX+f38cf3WHl4dmKJZ9IMZh0+13/TDePTTbsaB3/b4M67vzewvqLlTqWD7i6WzSN4z9tGS3bcexPPsf4FfviCQhHIJwqzkrPIKws1YEPB52xpKIWKJnLUkAQs+GI38QDmU1DM9DXz6nvDFXUHVdZP1h3B1GJYBrOEhzMTIa8NDMxsjgy9d/+vfUDs3j5asoQS0MdTjU0RstiB57muNFDrHQ/ZWz7GVklpy/+gksOZNwex1uL7VFrMxFrK9pWRFn32rGXkfE1xqCrBcC0XZTb7E3SFLg423dDe/xJ8ABz4cJiz++Hw28vG1khfob1ErQRITALkzhdKCZnWmYQNdsyhB3otMsRpRhZ9hcI2PolBWWV4/jU5YVjeNTllteho5PYAg10lQLUNMNaeY7d3nPuAyV0O/4VQAM5/MWEGSP7x0Nx9gTnYzBqZamOrEzcay8i1vJe1bQZUxgKm/Zocjqn4xJLEZ2iMkWbmF/TecOX7NKpsUeU9OCaESOocVK5li+atdAsRQcXbOb5bQUPK1JCJVu/OWpjXyBDoUy0TokT3VmDiZkF2u+BDaAi1GTEilaFw2pkHp5bUTLqq4Y++j4khYKnCc1FHEZyRDve1avgGIyRuaEUI5fYmVTzBUx82pnkc4i1szxo+hi0qxiii4mw4qZjKGLH7u8EJIjiz+E6fl23yBTmgKtdRg3klqHBCGRKoUwM8n8lmm9xGQbcHGnZLb/Fld4ZttvoJLIlq5FIXnJdDsuVtyZ7sbFE4cceBW94eA0R1bJgP4zJxYqhyCzYi1jahYjzmutaaniz29rQ4o3MBs1nWUQqCOFCzj4rD0p2sAJbR1IOxHf2eSCMNk+XV6jGa4qHXI8VbOpxC+nJ6M1r2wBKNONNswN98SVqWVqTPkGUUM37WbejhsqLixIfMWFcSNxnT7hcyJOzSZCj2wAO29FTZcXUIAMW1AFYC/R9/MRgVr22GvitwP08dQEhz6QmuAEMrlOYCKbTyc4bD8xgclkNprAsFKfkB96aLL8L7bdV6odm5cy5PMHYpXabsqw8iz9GPsfuTx4bYb95cU5WZtNrVPpQP4CzFS11g=="
	
	,['bp 8 to 1']	= "0eNqV1W1rgzAQB/CvUu61jlysD/WrjDG0DSMQo8TYTcTvvrOWtmwhJC+9er/+E3O6QKsmMRipLdQLyHOvR6jfFxjll27UVrPzIKCGqzR2okoCuum2wn5HWsGagNQX8QM1rklEJ7508qjOWSjVf7+0Z+tHAkJbaaXY898u5k89da0wlOxBWNPoceiNTVuhLNFDP1Jbr7f/JYolMEOdZuuW6I/Cg5WU7wztCFykEef9N+5As9ho6Ip2DI+GHiZ/bvWgpLVU+w+wt3wnuIsogpOgc48Kh1mGxMrusZwLq0IEfheYSziFCOjLgCyAYF4BAwT0rQJ5gMC9GcIPbHq8Mc5jghEnNvMweexMupkicgrdShk7hW6mCmZ8SzpFDqJT4SxYeTwlehdLKzpqeX5cElANtVGtOtj+gFS4CjPuE1+VnFd4YiU1/wK0SCw0"
	,['bp 8 to 2']	= "0eNqV1eFqgzAQAOBXKfdbRxJttb7KGEPbMAJplJh2k+K776ylLdsRLj89vc/LmYtX6OxZD964AM0VzKF3IzTvVxjNl2vtEgvToKGBi/HhjJEMXHtaAusTeQ1zBsYd9Q80cs4SMtVLpkrKnLS1/fdLejF/ZKBdMMHotf7bxfTpzqdOe6zsQQTfunHofcg7bQPSQz9iWu+W9yIlMpigyYt5qeiPothKLiNMwWfUymBj4Wi8Pqz3FIGWzyYN1oSAsf+ceNuuoKLq2qY2SVLKLrlJJFOxGUn2aEeYNadHxb1HZFV7jqDugqAEKTiEjBUhJYMQUUExBBldRsEQVLSGkr9RyhtDblrJ37V5EWF2qUNJM1XiDNFKnTpDNLNnM5ElKZE4ibTCP4EfXwnPdBP0CVOeP6kMbItpGKs3od8oDFy0H9eRryularkXFSb/Ag3NQ/4="
	,['bp 8 to 3']	= "0eNqdl91uwjAMhV9lynWZGif941WmaQIWoUglrdKUDSHefelKx5hMa++qIuAPJz4+cc9iW/em9dYFsT4Lu2tcJ9YvZ9HZvdvUw1o4tUasxdH60MeVRLjNYVgYf7EqxSUR1r2bT7GWl4QRqX5FAivyZOq6+fgVri6viTAu2GDNmP/3h9Ob6w9b42NmP4jgN65rGx9WW1OHiG6bLoY1bvjfiFqpRJziI4v0d+vNbvxODwn+gQIdCig0R6CKDE0nJkLR9NTkDCYjY+YoOT0ZPWLU/TkBAi3YUL1c0fKmtLa2IcS1hwKB52w5y4otEYWdoEzZ+tXLUpOSsl35nE1EjAEERjqPuEm+j+3s976Jz3nRDwK5mkTTh7YPAgNrBnjqAxqZ3Rh4WfmdAcuakwVJxVNNJJpZyRYuJbOKa24EKKRsr6NQJV+U8iYd6x4oB+AfmiSBFVeSgBUeNFeSKYrJuBhUhpBzTguu+dwbH6GdoeDaK77pkouRyyYN7CtELqtbpRSLmGwb3aySzF5GC6yA27w4hi5+XCQYUzOZeGYZQ8FyXsAPe1/lzN4n6E6xbhH0elOkcQquCNSOVMUZUdAsdMqYUHACZU6Sc9vQlCkJZnNQXENFZy2tuRaFYzKuKeGYnOkhOKXgegiOKZn9jlMqZiuilIw+0/xUKb4B22AOMeT2Sp+IehPD4lr5FJonFReOxndj05cFQCmrtIiS/QJrb07R"
	,['bp 8 to 4']	= "0eNqVl9tugzAMhl+lyjWdiBOOrzJNUw9RFYkGFEK3quq7zx09bTMsvkJ164/f5rdDT2LdDKbz1gVRn4TdtK4X9etJ9HbnVs0lFo6dEbU4WB8GjCTCrfaXwPiLZSnOibBuaz5FLc8JI1M/ZQIr82iapv14Slfnt0QYF2ywZtT//eH47ob92nhUdkcEv3J91/qwXJsmILpre0xr3eW+iFrqRBzxgorE1nqzGb/TF4G/oBAPhRGqzgRGPcrrGhsCxv4C5Et200Ug9B0xYEP8zrd4ndKiyALz5Nb1dgjdEARxmyy64HSm3jy+bXIGU0S0LZ3tWhktZE5Hxeg9/NN66yY6L9NorROPl4Lyp0L+pAJFBS41jYAqjsOBxEZ0WbMnWlKWkFnMSF8fFHo0ov6cO3q0sII9ezSnjCnwNn0piaiipQDpPcrRkDKhpDSQ3MVANgmA4Vk5b9npnQyKuxlosZqJoTuXcWefFpNHzc/VXuRuh4JzqtKIkjlzdC0Vd+RIjEoZxx1ZjpIRBJglANMjdCWK6xH6rYmxq9UMJuOufBrD3c80hb2eaUzJ3II0pWJuQZKiuS8uSMF3eRvMHlMef04S0awwDWPlIrQLjYGD8f14EpQFQCmrtEDbfgFjAT+1"
	,['bp 8 to 5']	= "0eNqdmttu2zAMhl9l0LUT6HzIqwzFkLZGYcC1A0fpFhR59ylL07QdZfPvVVGv/kxS5E9K2qu47w/tbuqGLDavonsYh73Y/HwV++5p2PbnZ/m4a8VGvHRTPpQnjRi2z+cHl79YRXFqRDc8tn/ERp0a4E334U0NvXls+378/eF1c7prRDvkLnftxf5/vxx/DYfn+3Yqlr0j8rQd9rtxyqv7ts8FvRv35bVxOH+3oFauEcfyIxT6Yze1D5d/s2cDv0A1H2ou0HgiMAbGBApj+RhLuugJqOND9YyLno9RM5gAY8hIRdgpEpPYGDnjk5JszFxo1C3D97u+y7k8/N+OtZvxR93y+VDKanqaxvJzoUz8lzJprrXbDbtDFtRnDFyL7vNHNEXF09+RQXCMOK702s0xPIdh1u8hpBh4rtO2RI4tat4WONPdsrJoOO85UAWksLxl8FvOjodcSVqN1IZCwIaxPm8qZNecEPALwfDjyu8Dlg/1sBBYKj11gBuoWRYUHWFB4VATorH26vXnWDLSykjkO+b2nWUyUmLX/skja1jyGBE3hiXoF55eM1qNsbgWVJew2iaNw6XsQ5jrXI+KuSGH1oDKN2et+DWn+dCECiLpsJUoxi5LoFWorpIKaDWKoV003xgAVW0ArBe6tbBgK9JeB3P0cr5YDwu/Jq0LMIf2MsKyqBiZl+BNEIPqoLaj6DVZ1jCncAVWDG10GtVGcsWcQTGMtHQWFVwyKx3SVvTCAtVL3HlUyRUjBIHRyq+CwenkLqK6Scc0oRi1fLjkJTodc6DwOZhkQDUqdJI8IzL4yCoZRe0tshsnC9o7VIJpDz0+OrM8DMgen/aQc0xwJdDOJViTFWdXECQ8B0sWV4HzHKP9BQ0yGdUVDKik5PoGC0qUZHjrUDFhtLkAT1+kJIeAi4lmpQ3rPO160ErbBo9eJCZKFEMO/VHhI5vhRCqiwxRtnkG9JHdI0eJefuPYJTr8M46h8NGDwx9j7xkDuD50YCMs+yyHE6z6HGySoJgy4pgUyCTP6RNywGzm87PuvgG7AMd9tLPQ7jtcrz1nwT1ynUNf80HTFXmBkqCmQVuRgPs9+hZHSmDGo28IJeeWUc9boTmbuHkr0DSuWAIfQ1UucOFL8goHviWvcNCj2Qomgv2hgkGPXyvX26hyVzDogWvB3DWiy+1zeeX2f2Ua0W/La+VZ/JHHH648eGmn/UUlY9A6qiRDmdv+AkeTuvM="
	,['bp 8 to 6']	= "0eNqdmetO20AQhV8F7W+D9u51XqVCVQIWsmTsyNnQRijv3k2Tkoge7Dn8inDYL2dmZ85e/K42/b7dTt2Q1epddU/jsFOrH+9q170M6/70LB+2rVqpt27K+/KkUsP69fTg/B/3SR0r1Q3P7W+1MseKGBlvRlpq5KHt+/HXzXB3fKxUO+Qud+1Z/98/Dj+H/eumnYqyD0Se1sNuO075ftP2uaC3464MG4fT7xbUfajUoXzE40nSJ4y9Ktn2Xc7l2f8A/3BBBIRwciVuRomXY/wMJkgCsrMBRbkSM6OklmPsDCZJAtKzATViJXpGiNF0yXnI4UvXQY6lCw9znCTD7mE2pmv17ksDTy/TWD4X6teVdr/4wrjP231WiBzoMsIKI83B2aol2br0RemzEuNzN7VP528jIiYmd+ZfjJLc0YUPU2flhX+jbiFqa4io9bVgbrGCFFh5k1i5dkdot0SxW6aN3EJSuuGrX5G3lMe/gaCRdjULi62mXQ1zEs0xkNN8w9nMcXkWnP4G2PId4AxtfGZ5up1l1NsF9V8nyX3DG0XZ96w1WkFSAmuUn6AWQaNgwfnY/8AadvKecrACPIImFmoF0Ia1a0EGvebtWlJD3rA+CmfHWxYDDc871oC1IHWeheIQA3u4MQJtkXV4CbRmlWoYcGJNV9BxvmGOQlBX0LyfGsnOJRh+PdAisCWNGhZgcKQzY4oXTICZzX8g/Q3riKT1Chb0wK4RerlgQyKdDUfbkBSY+Uif3uHxLxrmwggadbTMeRurcKy9CJbJ6Nl7Hwk08IbjBGtvjLzfiLg1aTd4ihNpN5jSEHYD66TWZFMLZrQ2pIVJmOwWCOardkxvwquOmt7vwAvHOrBbE6wmspsRrKZm7oQxQnQLa2ZTS+1eoIqkiaMQFJEM0VJYA3uhhHXQm3V8N06/NMAYulwxhn5xgDH0iwOMYT0YU9grVEhpNFk0hfJYqS63r2XI9YVepfp1GVaepbs83sXy4K2ddudNXaqtTabRdTHHP7SZSek="
	,['bp 8 to 7']	= "0eNqdmt1O4zAQhV8F+bpU/rfTV0FoVSBCkUpSpSm7Feq7r7sthUWT5JxeIQL5esYeH8/Y/VBPm3297Zt2UKsP1Tx37U6tHj7Urnlt15vTs+GwrdVKvTf9sC9PFqpdv50enP/jPqvjQjXtS/1HrcxxQbyZvr1pqTcP9WbT/f72ujs+LlTdDs3Q1Gf9/345/Gr3b091X5RdEUO/bnfbrh/un+rNUNDbblde69rT5xbUfVioQ/mRC/2l6evn89/8SeAPqMWh7hMqYByO8aK2KEA9DjUT2gKOsROYCGOmxCSYoicoGaZMTVoFU6bGxWg6L+N8Xho+2xNA/Ur33XbTDEN5KCT68kqUGA5h2OU1Vonxldr7svr7174rP2dWzGnULqbS7YftflASOSDqzHSEkVFnGHUJUKenxWUAYaZHvyLi00R4VgPa7GR41hDaHKPN0gvK/7+grER1NDUAVE/vSojWQFODOEURWWKXReuXSLyJ3qKQeDO9fyLUitYqjqLTN5jMj7GMQN47w+64wCA4yxYDXhwDx2LkofTsRi6rCSxGVhN5Bxud16Ydm1Z8yfipmDOLCfN1q6toU7SSOM9XVk7kGNr43Hwt5S1d88tROlqdBXqHWyosd5xPPB9oV3WA3Ei7KkJNN3isRQYhs8aFqK1YpwagQTPlopigwfDlIjKIwbJ+K67ugPQjbjpCz1s2slZCYN1VjjDSPmhETmKdRgMJlmn7MgC1ImpMvQQ2pahphwF0RoPovHZ04rREy7iUvU7MbOkXHW9/GNiz9icHHkiMFimRtE2ZkkgzApZGZI+pEGbFW5VB5jQx/YhlwIY1QTFZkiUx4jQnul8XN4zkWYyZb6oS3Z/LAxWZ8zk5vMQXjz8DnN8dE92fI4NIt+cANGvSqCzAZPtyhGlJpphAmdk2zPTkj9tC9qQ5IvEHkinHjyygS+4gp1uZbdVlVWynLq7sTLfm4rFBRXfmYmFbGbaFltXQnbibn7WKbsvlEKk+3F2CpE/5KvqST1Z7w82Hu0Ft4iteD/RbVeblQ9yK9H8/X8gZrWmbdfQxodF88+5v+BRLf4qD7su0I8tyh4w8u/VA0EAX5kjqGR3puhzjsrsSNAjsJuXlG3V6lxJP4g1zNe8vnPkgDX2cDFEtU7bL97rY1fznad/ImHnmRGNEB9vYj0iJtKsEJPWhW3gzHWEmbrpHoquIc0tZhdXkcpOVWDqh5W8mMFfsdorj2MZwhMMeU41gAtlVjWAiueuMYNiDqhEM69QF87hQzVC/lVe+vnC4UJt1ea08y3dDd5fKg/e63519Lidrs6l0Kr3IXxBOeYs="
	,['bp 8 to 8']	= "0eNqdmetu4jAQhV+l8u+w8t0Or7KqVtBaVaSQRMHpLkK8+5rl1m2HMKe/UN3648yMfTx292LdTmkYmy6L5V40L323Fcufe7Ft3rpVexzLuyGJpXhvxjyVkUp0q81x4PQXiygOlWi61/RHLNWh+uZMDc3cpbbtf3+Ybg7PlUhdbnKTTvr//bD71U2bdRqLsisij6tuO/RjXqxTmwt66LdlWt8dv7egFqYSu/LhDkdJnzD6pmRom5zL2FeA/uFOCEshDF+JmlFi+Rg9g3GcgORsQJ6tZC6ewKbIGUpkhKNmo6nZOubWiZJszFx1lGLEY2bjUZqtxM4pMfAGMiTHwhxNclgL91pqWstt5U7FRsa3sS+fDzZjMaqLO/VTHqYsKHJAyBohR3S30emrUQyZQS3RXUuq0QrF0Go0kHV9ATGSrg0ANgjYom5zXCSvzZheTr/yFNSh3sOBetRG6BIFFEMvGP4uWJwdQP0fo6aoNUqV5AEvYYtTJAfoWexZzsM6GmSPnLFfcndd2U13Z2EbgzRKdBot3Cgxamwc3DdxqB41MLriAXRlyZAWgYKrB/W+72SmBjPAkG4l6I4cJqejOhe+tL0MoEYtnCy9Nagx0hgLYsitZx3qPLQYjxohjQkohjwzbESDojE13jR+2k+esZ+cRH2KzJ1TqIkyegGnUW0cqIF96m5a7x5LzgJfIq9f8rhaDjRuTkLQM4XDDHCH/OFWcj+tEe6PWVj0Lq4eZ8CjF3MOU4Gmy2Gi13bSrLxBPY/s2j18aTeMCB3SItIvT9+4wBvGwvPfuL6zuBF5baNDrmEH4ygLEjQwcp0EBTy/keEFzgPrZU3QGgzwZEZrQHsoWodD9wz9LOrRs5bGBLQPoDHo6xNNQe8K9FMvejugKQo8D2gK6taF8lyJJqdNmXL7D0wl2lWZVsbiU+6fYhl4T+P25KExaB1VLUOx+r+Q+IoZ"
}) do

	ret.area[name] = {
		
	bp="0eNptjs0KwjAQhN9lzhHaHmzNq4hIfxZdaDahSauh5N1N6sWDl4EZZr/ZHcO8kltYAvQOHq146OsOzw/p55KF6AgaHMhAQXpT3MvaieQ0PskHJAWWid7QdbopkAQOTF/OYeJdVjPQkgv/CQrO+nxkpSxmUKUQs6bCO5b1z6MKGy3+KJ+7tmm6+lK1TUofNCJETw=="
		
		,probability = 150
		,remoteness_min = 5
		,only_once = true
		
		,userdata = bpstring
		
		,ScriptForAll = function(rndroll, game, surface, force, area, center, namelist, entitylist, userdata)
			
			for _,ent in pairs(entitylist) do
				if ent and ent.valid then ent.destroy() end
			end
			
			local data = {}
			
			data.bp=userdata
			
			global.ZADV.adata = global.ZADV.adata or {}
			global.ZADV.adata['bpgift'] = global.ZADV.adata['bpgift'] or {}
			global.ZADV.adata['bpgift'][center.x] = global.ZADV.adata['bpgift'][center.x] or {}
			global.ZADV.adata['bpgift'][center.x][center.y] = global.ZADV.adata['bpgift'][center.x][center.y] or {}
			
			
			-----------------------------------------------------------------------------------------------
			data.on_tick = function() if game.tick % 10 <= 1 then
			for x,xd in pairs(global.ZADV.adata['bpgift']) do if type(xd)=='table' then for y,ad in pairs(xd) do
			
			if not ad.done then
				
				if ad.gifted then ad = {done = true} end
				
				for _,player in pairs(game.players) do
				if not ad.done and Area.inside(Position.expand_to_area({x,y}, 16), player.position) then
				
					local function _insert(inventory, bpstring)
						if inventory.can_insert({ name='blueprint', count=1 })
						and inventory.insert({ name='blueprint', count=1 }) then
							
							local bp=inventory.find_item_stack('blueprint')
							
							if bp and 
							( bp.export_stack() == "0eNqrrgUAAXUA+Q=="
							or ( not bp.get_blueprint_tiles() and not bp.get_blueprint_entities() ) )
							and bp.import_stack(bpstring) == 0
							then return true end
							
						end return false
						
					end
						
						if _insert(player.get_inventory(defines.inventory.player_main), ad.bp) then ad.gifted = true
						elseif _insert(player.get_inventory(defines.inventory.player_quickbar), ad.bp) then ad.gifted = true
						end
						
				end end
				
				global.ZADV.adata['bpgift'][x][y] = ad
				
			end end end end end end 
			-----------------------------------------------------------------------------------------------
			
			
			global.ZADV.adata['bpgift'][center.x][center.y] = data
			
			if not global.ZADV.adata['bpgift'][center.x][center.y].evented then
				global.ZADV.adata['bpgift'][center.x][center.y].evented = true
				script.on_event(defines.events.on_tick, global.ZADV.adata['bpgift'][center.x][center.y].on_tick)
			end
			
		end
	
		,experemental = true
	}
end

ret.area['occupied base'] = {
	
	bp=""
	
	,probability = 200
	,remoteness_min = 75
	,only_once = true
	,ignore_technologies = true
	,force = "zadv_opposite"
	,random_direction = true
	
	,dangerous = true
		
	,ScriptForEach = function(rndroll, game, surface, force, area, center, entity, namelist, locstore, userdata)
		
		locstore.spitter = locstore.spitter or "medium-spitter"
		locstore.spawner = locstore.spawner or "biter-spawner"
		
		if entity.valid then
			if entity.prototype.name == "wooden-chest" then
				local pos = entity.position
				entity.destroy()
				locstore.spitter = locstore.spitter == "big-spitter" and "medium-spitter" or "big-spitter"
				surface.create_entity{name=locstore.spitter, position=pos, force=force}
				
			elseif entity.prototype.name == "iron-chest" then
				local pos = entity.position
				for _,ent in pairs(surface.find_entities_filtered{area=Position.expand_to_area(pos, 2)}) do
					ent.destroy()
				end
				locstore.spawner = locstore.spawner == "spitter-spawner" and "biter-spawner" or "spitter-spawner"
				surface.create_entity{name=locstore.spawner, position=pos, force=force}
				
			elseif entity.prototype.name == "logistic-chest-storage" then
				entity.get_inventory(defines.inventory.chest).insert({name="piercing-rounds-magazine", count=1000})
				
			elseif entity.prototype.name == "storage-tank" then
				entity.fluidbox[1] = { name = "heavy-oil", amount = 25000 }
				
			elseif entity.prototype.name == "roboport" then
				entity.get_inventory(defines.inventory.roboport_robot).insert({name="logistic-robot", count=50})
				entity.get_inventory(defines.inventory.roboport_robot).insert({name="construction-robot", count=50})
				entity.get_inventory(defines.inventory.roboport_material).insert({name="repair-pack", count=200})
				
			end
		end
	end
	
	,ScriptForAll = function(rndroll, game, surface, force, area, center, namelist, entitylist, userdata)
		
		game.forces["enemy"].set_friend(force, true)
		game.forces[force].set_friend("enemy", true)
		game.forces[force].cancel_charting(surface)
		game.forces[force].evolution_factor = 0.3
		game.forces[force].friendly_fire = false
		
		game.forces[force].worker_robots_battery_modifier = 100
		game.forces[force].worker_robots_speed_modifier = 7
		game.forces[force].worker_robots_storage_bonus = 5
		
		surface.set_multi_command{unit_count=1, force=force, unit_search_distance=28,
			command={type=defines.command.build_base, destination=Position.offset(center, 29, 25),	distraction=defines.distraction.none, ignore_planner=true}}
		surface.set_multi_command{unit_count=1, force=force, unit_search_distance=28,
			command={type=defines.command.build_base, destination=Position.offset(center, -29, 25), distraction=defines.distraction.none, ignore_planner=true}}
		surface.set_multi_command{unit_count=1, force=force, unit_search_distance=28,
			command={type=defines.command.build_base, destination=Position.offset(center, 29, -25), distraction=defines.distraction.none, ignore_planner=true}}
		surface.set_multi_command{unit_count=1, force=force, unit_search_distance=28,
			command={type=defines.command.build_base, destination=Position.offset(center, -29, -25),distraction=defines.distraction.none, ignore_planner=true}}
		surface.set_multi_command{unit_count=100, force=force, command={type=defines.command.wander}}
		
	end

}

ret.area['free recipe'] = {
	
	bp="0eNptjs0KwjAQhN9lzhHaHmzNq4hIfxZdaDahSauh5N1N6sWDl4EZZr/ZHcO8kltYAvQOHq146OsOzw/p55KF6AgaHMhAQXpT3MvaieQ0PskHJAWWid7QdbopkAQOTF/OYeJdVjPQkgv/CQrO+nxkpSxmUKUQs6bCO5b1z6MKGy3+KJ+7tmm6+lK1TUofNCJETw=="
	
	,probability = 30
	,remoteness_min = 1
	,max_copies = 50
	
	,userdata = {
		dissalowed_recipes = {
			"hidden-electric-energy-interface",
			"electric-energy-interface",
			"infinity-chest",
			"player-port",
			"railgun",
			"railgun-dart",
			"small-plane",
			"electric-energy-interface",
			"express-loader",
			"fast-loader",
			"loader",
			"creative-mode-fix_belt-immunity-equipment",
			"creative-mode-fix_active-electric-energy-interface-input",
			"creative-mode-fix_active-electric-energy-interface-output",
			"creative-mode-fix_alien-attractor-large",
			"creative-mode-fix_alien-attractor-medium",
			"creative-mode-fix_alien-attractor-small",
			"creative-mode-fix_autofill-requester-chest",
			"creative-mode-fix_configurable-super-boiler",
			"creative-mode-fix_creative-cargo-wagon",
			"creative-mode-fix_creative-chest",
			"creative-mode-fix_creative-lab",
			"creative-mode-fix_creative-provider-chest",
			"creative-mode-fix_duplicating-cargo-wagon",
			"creative-mode-fix_duplicating-chest",
			"creative-mode-fix_duplicating-provider-chest",
			"creative-mode-fix_duplicator",
			"creative-mode-fix_enemy-object_behemoth-biter",
			"creative-mode-fix_enemy-object_behemoth-spitter",
			"creative-mode-fix_enemy-object_big-biter",
			"creative-mode-fix_enemy-object_big-spitter",
			"creative-mode-fix_enemy-object_big-worm-turret",
			"creative-mode-fix_enemy-object_biter-spawner",
			"creative-mode-fix_enemy-object_medium-biter",
			"creative-mode-fix_enemy-object_medium-spitter",
			"creative-mode-fix_enemy-object_medium-worm-turret",
			"creative-mode-fix_enemy-object_small-biter",
			"creative-mode-fix_enemy-object_small-spitter",
			"creative-mode-fix_enemy-object_small-worm-turret",
			"creative-mode-fix_enemy-object_spitter-spawner",
			"creative-mode-fix_energy-source",
			"creative-mode-fix_energy-void",
			"creative-mode-fix_fluid-source",
			"creative-mode-fix_fluid-void",
			"creative-mode-fix_free-fluid-crude-oil",
			"creative-mode-fix_free-fluid-heavy-oil",
			"creative-mode-fix_free-fluid-light-oil",
			"creative-mode-fix_free-fluid-lubricant",
			"creative-mode-fix_free-fluid-petroleum-gas",
			"creative-mode-fix_free-fluid-steam",
			"creative-mode-fix_free-fluid-sulfuric-acid",
			"creative-mode-fix_free-fluid-water",
			"creative-mode-fix_heat-source",
			"creative-mode-fix_heat-void",
			"creative-mode-fix_item-source",
			"creative-mode-fix_item-void",
			"creative-mode-fix_magic-wand-creator",
			"creative-mode-fix_magic-wand-healer",
			"creative-mode-fix_magic-wand-modifier",
			"creative-mode-fix_passive-electric-energy-interface",
			"creative-mode-fix_passive-energy-source",
			"creative-mode-fix_passive-energy-void",
			"creative-mode-fix_random-item-source",
			"creative-mode-fix_super-beacon",
			"creative-mode-fix_super-boiler",
			"creative-mode-fix_super-clean-module",
			"creative-mode-fix_super-construction-robot",
			"creative-mode-fix_super-consumption-module",
			"creative-mode-fix_super-cooler",
			"creative-mode-fix_super-effectivity-module",
			"creative-mode-fix_super-electric-pole",
			"creative-mode-fix_super-fusion-reactor-equipment",
			"creative-mode-fix_super-loader",
			"creative-mode-fix_super-logistic-robot",
			"creative-mode-fix_super-personal-roboport-equipment",
			"creative-mode-fix_super-pollution-module",
			"creative-mode-fix_super-productivity-module",
			"creative-mode-fix_super-radar",
			"creative-mode-fix_super-radar-2",
			"creative-mode-fix_super-roboport",
			"creative-mode-fix_super-slow-module",
			"creative-mode-fix_super-speed-module",
			"creative-mode-fix_super-substation",
			"creative-mode-fix_void-cargo-wagon",
			"creative-mode-fix_void-requester-chest",
			"creative-mode-fix_void-storage-chest"
		}
	}
	
	,ScriptForEach = function(rndroll, game, surface, force, area, center, entity, namelist, locstore, userdata)
		
		if entity and entity.valid then entity.destroy() end
		
		local data = {
			done = false,
			gifted = false
		}
		
		global.ZADV.adata = global.ZADV.adata or {}
		global.ZADV.adata['frerecipe'] = global.ZADV.adata['frerecipe'] or {}
		global.ZADV.adata['frerecipe'][center.x] = global.ZADV.adata['frerecipe'][center.x] or {}
		global.ZADV.adata['frerecipe'][center.x][center.y] = global.ZADV.adata['frerecipe'][center.x][center.y] or {}
		
		if userdata and userdata.dissalowed_recipes then
			data.disrec = userdata.dissalowed_recipes
		end
		
		-----------------------------------------------------------------------------------------------
		data.on_tick = function() if game.tick % 10 <= 1 then
		for x,xd in pairs(global.ZADV.adata['frerecipe']) do if type(xd)=='table' then for y,ad in pairs(xd) do
		
		if not ad.done then
			
			if ad.gifted then ad = {done = true} end
			
			for _,player in pairs(game.players) do
			if not ad.done and Area.inside(Position.expand_to_area({x,y}, 16), player.position) then
				
				local possible_recipes = {}
				for _,r in pairs(player.force.recipes) do
					if not r.hidden and not r.enabled then
						if ad.disrec then
							local alowed = true
							for _,dr in pairs(ad.disrec) do
								if dr == r.name then alowed = false end
							end
							if alowed then
								table.insert(possible_recipes, r.name)
							end
						else
							table.insert(possible_recipes, r.name)
						end
					end
				end
				
				local rec = 'dummy'
				if #possible_recipes then
					rec = ZADVRnd(1,#possible_recipes,game.tick)
					if possible_recipes and possible_recipes[rec] then
						rec = possible_recipes[rec]
					else ad.gifted = true
					end
				else ad.gifted = true
				end
				
				if not ad.gifted and player.force.recipes[rec] then
					player.force.recipes[rec].enabled = true
					player.print({'message.hey_recipe',player.force.recipes[rec].prototype.localised_name}, Color.green)
					ad.gifted = true
				end
				
					
			end end
			
			global.ZADV.adata['frerecipe'][x][y] = ad
			
		end end end end end end 
		-----------------------------------------------------------------------------------------------
		
		
		global.ZADV.adata['frerecipe'][center.x][center.y] = data
		
		if not global.ZADV.adata['frerecipe'][center.x][center.y].evented then
			global.ZADV.adata['frerecipe'][center.x][center.y].evented = true
			script.on_event(defines.events.on_tick, global.ZADV.adata['frerecipe'][center.x][center.y].on_tick)
		end
	end

}

ret.area['free technology'] = {
	
	bp = "0eNptjs0KwjAQhN9lzhHaHmzNq4hIfxZdaDahSauh5N1N6sWDl4EZZr/ZHcO8kltYAvQOHq146OsOzw/p55KF6AgaHMhAQXpT3MvaieQ0PskHJAWWid7QdbopkAQOTF/OYeJdVjPQkgv/CQrO+nxkpSxmUKUQs6bCO5b1z6MKGy3+KJ+7tmm6+lK1TUofNCJETw=="
	
	,probability = 20	
	,remoteness_min = 10
	,max_copies = 20
	
	,userdata = {}
	
	,ScriptForAll = function(rndroll, game, surface, force, area, center, namelist, entitylist, userdata)
		
		if entity and entity.valid then entity.destroy() end
		
		local data = {
			done = false,
			gifted = false
		}
		
		global.ZADV.adata = global.ZADV.adata or {}
		global.ZADV.adata['freetech'] = global.ZADV.adata['freetech'] or {}
		global.ZADV.adata['freetech'][center.x] = global.ZADV.adata['freetech'][center.x] or {}
		global.ZADV.adata['freetech'][center.x][center.y] = global.ZADV.adata['freetech'][center.x][center.y] or {}
		
		if userdata and userdata.dissalowed_techs then
			data.distech = userdata.dissalowed_techs
		end
		
		-----------------------------------------------------------------------------------------------
		data.on_tick = function() if game.tick % 10 <= 1 then
		for x,xd in pairs(global.ZADV.adata['freetech']) do if type(xd)=='table' then for y,ad in pairs(xd) do
		
		if not ad.done then
			
			if ad.gifted then ad = {done = true} end
			
			for _,player in pairs(game.players) do
			if not ad.done and Area.inside(Position.expand_to_area({x,y}, 16), player.position) then
				
				local possible_tech = {}
				for _,t in pairs(player.force.technologies) do
					if t.enabled and not t.researched then
						if ad.distech then
							local alowed = true
							for _,dr in pairs(ad.distech) do
								if dr == t.name then alowed = false end
							end
							if alowed then
								table.insert(possible_tech, t.name)
							end
						else
							table.insert(possible_tech, t.name)
						end
					end
				end
				
				local tech = 'dummy'
				if #possible_tech then
					tech = ZADVRnd(1,#possible_tech,game.tick)
					if possible_tech and possible_tech[tech] then
						tech = possible_tech[tech]
					else ad.gifted = true
					end
				else ad.gifted = true
				end
				
				if not ad.gifted and player.force.technologies[tech] then
					player.force.technologies[tech].researched = true
					player.print({'message.hey_tech', player.force.technologies[tech].prototype.localised_name}, Color.green)
					ad.gifted = true
				end
				
					
			end end
			
			global.ZADV.adata['freetech'][x][y] = ad
			
		end end end end end end 
		-----------------------------------------------------------------------------------------------
		
		global.ZADV.adata['freetech'][center.x][center.y] = data
		
		if not global.ZADV.adata['freetech'][center.x][center.y].evented then
			global.ZADV.adata['freetech'][center.x][center.y].evented = true
			script.on_event(defines.events.on_tick, global.ZADV.adata['freetech'][center.x][center.y].on_tick)
		end
	end

}


ret.area['new'] = {
	
	bp=""
	
	,probability = 100
	,remoteness_min = 10
	,remoteness_max = 0
	,only_once = false
	,max_copies = 0
	,ignore_technologies = true
	,force = "neutral"
	,random_direction = false
	,force_build = true
	,finalize_build = true
	,force_reveal = false
	,ignore_water = false
	,ignore_all_collision = false
	
	,dangerous = true
	,active = true
	,minable = true
	,destructible = true
	,remains = false
	,health = -1
	,operable = true
	,order_deconstruction = false
	,rotatable = true
	
	,userdata = {}
	
	,ScriptForEach = function(rndroll, game, surface, force, area, center, entity, namelist, locstore, userdata) end
	,ScriptForAll = function(rndroll, game, surface, force, area, center, namelist, entitylist, userdata) end
	
	,messages = {
		{ msg = "", color = {r=0.30, g=0.70, b=1, a=0.8} }
	}
	
	,experemental = true

}

return ret
